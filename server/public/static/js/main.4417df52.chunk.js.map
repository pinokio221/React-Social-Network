{"version":3,"sources":["components/Settings/Settings.module.css","components/TwoFactorAuth/TwoFactorValidation.module.css","components/Dialogs/Contact/Contact.module.css","components/Register/Register.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Profile/ProfileInfo/ProfileDescription/ProfileStatus/ProfileStatus.module.css","components/FormControls/FormControls.module.css","assets/images/logo.png","components/Profile/Posts/Posts.module.css","components/Profile/Profile.module.css","components/Dialogs/DialogsSearchField/DialogsSearchField.module.css","assets/images/loader.gif","components/FormControls/ReduxFormControls.module.css","assets/images/loader2.gif","components/Header/Header.module.css","assets/images/signin.png","assets/images/tfa_auth.jpg","components/Navigate/Navigate.module.css","components/Friends/Friend/Friend.module.css","components/Profile/ProfileInfo/ProfileDescription/ProfileDescription.module.css","serviceWorker.js","api/posts-api.js","api/profile-api.js","api/friendship-api.js","redux/profile-reducer.js","api/chat-api.js","redux/dialogs-reducer.js","redux/friends-reducer.js","api/users-api.js","redux/users-reducer.js","api/auth-api.js","redux/auth-reducer.js","redux/redux-store.js","components/Navigate/Navigate.jsx","components/News/News.jsx","hoc/AuthRedirect.js","components/Friends/Friends.jsx","components/Friends/Friend/Friend.jsx","components/Friends/Invitation/Invitation.jsx","components/Friends/FriendsContainer.jsx","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Contact/Contact.jsx","components/Dialogs/DialogsSearchField/DialogsSearchField.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfilePhotoModal.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfileDescription.jsx","components/Profile/ProfileInfo/ProfileHub/ProfileHub.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","validators/validator.js","components/FormControls/ReduxFormControls.js","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/FormControls/FormControls.js","components/TwoFactorAuth/TwoFactorVerify.jsx","components/TwoFactorAuth/TwoFactorValidation.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","components/Register/Register.jsx","validators/RegisterFormValidator.js","components/Register/RegisterContainer.jsx","components/Dialogs/Messages/Message/Message.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Messages/MessagesContainer.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/Posts/Post/Post.module.css","components/Dialogs/Messages/Messages.module.css","components/Users/User/User.module.css","components/Friends/Friends.module.css","components/Friends/Invitation/Invitation.module.css","components/Profile/ProfileInfo/ProfileHub/ProfileHub.module.css","components/Login/Login.module.css","components/TwoFactorAuth/TwoFactorVerify.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","rateLimit","axios","create","baseURL","withCredentials","maxRequests","perMilliseconds","maxRPS","postsAPI","userId","get","then","response","data","catch","error","post_content","post","content","id","put","post_id","delete","profileAPI","requestURL","img","headers","user_status","status","getMaxRPS","friendshipAPI","pagination","togglePicUploadProgress","inProcess","type","displaySuccessfullMessage","msg","displayErrorMessage","initialState","userInfo","userFriends","totalFriends","postsData","editedPost","pageFetching","friendsFetching","pictureUploading","successfullMessage","errorMessage","getProfilePosts","dispatch","posts","profileReducer","state","action","slice","newPostText","console","log","map","p","index","indexOf","splice","friends","returnedInfo","profile_image","friendshipStatus","chatAPI","getProfileDialogs","getDialogMessages","receiveId","sentMessage","getProfileDialogById","dialogid","toggleMessagesFetchingAction","isFetching","dialogsData","contactsData","totalContacts","dialogsCount","messagesData","messagesCount","messagesPagination","dialogsPagination","contactsPagination","currentDialogData","newMessageBody","dialogsIsFetching","messagesIsFetching","dialogsReducer","body","message","dialogs","contacts","dialog_data","messages","invitations","totalInvitations","friendsPagination","invitationsPagination","getProfileInfo","getProfileFriends","items","getProfileInvitations","receivedInvitations","friendsReducer","u","page","usersAPI","currentPage","text","onSearchClickAction","filteredUsers","usersFound","setUsersAction","users","toggleIsFetchingAction","filter","searchInput","pageSize","totalUsersCount","filteredUsersCount","showMorePagination","usersReducer","authAPI","settings","authId","firstname","lastname","fullname","email","login","gender","birthday","age","password","authCode","setUserData","isAuth","displayAuthError","error_msg","toggleLogFormInProcess","toggleSignOutInProcess","setAuthStageAction","stage","auth_id","regError","authError","initialized","authStage","regFormInProcess","logFormInProcess","signOutInProcess","qrCode","authMe","user","twoFactorAuthSetStage","setAuthIdPromise","setUserAuthIdAction","setAuthStagePromise","Promise","all","userLogin","verified","qrcode","QRCode","twoFactorAuthSetting","userLogout","authReducer","reducers","combineReducers","profilePage","dialogsPage","friendsPage","usersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Navigate","className","styles","nav","to","activeClassName","activeLink","item","icon","itemName","style","fontSize","News","props","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","this","React","compose","connect","withRouter","TabPanel","children","value","other","role","hidden","aria-labelledby","Box","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","Friends","isAuthUserPage","undefined","profilePageId","authData","classes","useState","setValue","handleChange","event","newValue","AppBar","position","Tabs","variant","centered","onChange","aria-label","Tab","label","length","dataLength","next","fetchMoreFriends","overflow","hasMore","hasMoreFriends","loader","fetchMoreProgress","CircularProgress","contentBlock","emptyListBlock","fetchMoreInvitations","hasMoreInvitations","first_name","Friend","profile_block","src","image","profile_name","actions","Button","convBtn","convIcon","onClick","removeFriend","removeBtn","removeIcon","inventation_status","cancelInvitation","undo_btn","size","friend_icon","faUndo","friend_status","faUserFriends","sendInvitation","add_btn","vl","faUserPlus","Invitation","city","acceptRequest","acceptBtn","acceptIcon","rejectRequest","rejectBtn","rejectIcon","acceptMsg","rejectMsg","FriendsContainer","params","acceptInvitation","rejectInvitation","setState","setTimeout","getFriendsPage","resetFriendsPageAction","f","key","i","fetchProgress","friendsPromise","invitationsPromise","profilePromise","sendInvitationAction","cancelInvitationAction","acceptInvitationAction","rejectInvitationAction","removeFriendAction","Settings","checkedB","tfa","statusIcon","progress","otherWrapper","tfaField","tfaRow","FormGroup","row","tfaSwitch","FormControlLabel","control","Switch","checked","target","updateSettings","name","color","signOutButton","signOutIcon","SettingsContainer","signOut","updateSettingsAction","Dialog","dialog","active","profile_info","alt","profile_message","Contact","contact_wrapper","DialogsSearchField","wrapper","field","Grid","container","spacing","alignItems","TextField","width","Dialogs","useTheme","dialogsElements","d","contactsElements","selectTab","indicatorColor","textColor","axis","direction","onChangeIndex","dir","tabContentWrap","dialogsItems","fetchMoreDialogs","hasMoreDialogs","contactsItems","fetchMoreContacts","contactsCount","hasMoreContacts","DialogsContainer","getProfileContacts","totalDialogs","fetchMoreDialogsAction","fetchMoreContactsAction","User","username","Users","searchFieldValue","createRef","pagesCount","Math","ceil","pages","push","search_block","Form","Row","Col","sm","search_form","Control","ref","placeholder","xs","filter_icon","faFilter","onSearchClick","current","search_btn","profile_wrapper","usersElements","not_found","filteredElements","onPageChanged","selectedPage","onShowMore","showMoreBtn","UsersContainer","query","getUsersBySearchQuery","setCurrentPage","getUsers","getMoreUsers","resetPage","profileInfo","trim","toLowerCase","showMoreAction","ProfileStatus","editMode","toggleEditMode","updateProfileStatus","onStatusChange","e","currentTarget","prevProps","prevState","autoFocus","onBlur","status_input","pencil_icon","faPencilAlt","no_status","cursor","modal","display","justifyContent","flexDirection","boxShadow","shadows","padding","input","marginLeft","btn","marginTop","orig_img_container","height","maxWidth","maxHeight","marginBottom","overflowX","overflowY","orig_img","presentImage","presentBlock","cropBlock","save_btn","crop_icon","ProfilePhotoCropper","setImage","aspect","crop","setCrop","result","setResult","handleClose","setOpen","selectFile","Modal","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","onSubmit","preventDefault","formData","FormData","append","updateProfilePicture","keepSelection","minWidth","circularCrop","file","onImageLoaded","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","resolve","reject","toBlob","blob","margin","Image","URL","createObjectURL","roundedCircle","cropModalButtons","ProfilePhotoUploadModal","accept","multiple","handleFileChange","htmlFor","component","ProfilePhotoModal","change_photo_btn","files","ProfileDescription","component_wrapper","headerPhoto","header_image","descriptionBlock","Container","md","user_image_block","pictureUploadProcess","pictureLoader","PicLoader","user_image","Date","userActionsIcon","disabled","disableRipple","user_description","user_name","country","ProfileHub","friendsList","friend_user_image","friendName","Card","cardElement","border","Header","hubTitle","hubIcon","showAll","href","Body","user_friends","emptyBlock","sadIcon","ProfileInfo","required","maxLengthCreator","maxLength","ReduxFormControl","meta","child","hasError","touched","postForm","ReduxTextArea","restProps","as","fieldMaxLength","getPublishDate","publishDate","dateString","todayDate","date","today","yesterday","publish","setDate","getDate","setHours","setMinutes","setSeconds","getTime","compareDates","day","getMonth","getFullYear","hours","getHours","minutes","getMinutes","ampm","SkipDialog","setSkipDialog","skipDialog","DialogContent","DialogContentText","DialogActions","setEditMode","PostForm","handleSubmit","Group","controlId","Field","focus","validate","onMouseDown","updatePostBtn","reduxForm","enableReinitialize","initialValues","Post","anchorEl","setAnchorEl","option","setEditedPostAction","deletePost","Alert","setEditedPost","updatePost","post_option","IconButton","aria-controls","aria-haspopup","Menu","keepMounted","PaperProps","MenuItem","postMenuIcon","like_icon","faHeart","likesCount","comment_icon","faCommentAlt","commentsCount","share_icon","faShare","repostsCount","posted_info","PostReduxForm","Posts","postsElements","likes","comments","reposts","created_at","postsBlock","values","addPost","PostsContainer","user_id","urlDataComponent","elevation","Profile","visible","autoClose","resetModalMessage","Snackbar","autoHideDuration","anchorOrigin","horizontal","vertical","severity","ProfileContainer","getProfilePage","resetProfilePageAction","pageProgress","mapDispatchToProps","updateProfilePictureAction","header","logo_icon","HeaderContainer","LoginInputFormControl","loginFormWrapper","loginInputField","loginErrorICon","RenderTextField","invalid","custom","helperText","fullWidth","InputLabelProps","shrink","AuthCodeReduxForm","phone_icon","form_row","codeRow","login_progress","submitBtn","TwoFactorVerify","verifyTwoFactorAuth","auth_verify_code","errors","forEach","auth_validate_code","tfa_image","TwoFactorValidation","validateTwoFactorAuth","LoginReduxForm","for","process","signin","signin_icon","footer_form_row","Login","resetAuthError","LoginContainer","RenderPasswordField","autoComplete","RenderRadioButton","rest","FormControl","FormLabel","RadioGroup","Radio","RenderDatePicker","dateFormat","moment","format","utils","DateFnsUtils","DatePicker","disableFuture","openTo","views","inline_field","ReduxRegisterForm","test","repeat_password","asyncValidate","ms","includes","pristine","submitting","reset","logo","middle","signup_btn","Register","resetRegError","generateForm","format_birthday","userBirthdayDate","ageDifMs","now","ageDate","abs","getUTCFullYear","getUserAge","signUp","userRegister","RegisterContainer","Message","author","userPhoto","authorData","my_message","msg_wrapper","other_message","ChatMessageForm","submitChatMessage","inputBlock","InputGroup","chatMessage","handleSearchChange","sendBtn","endIcon","iconsTab","toggleEmojiPicker","emojiIcon","attachIcon","emojiPicker","tabIndex","set","onSelect","addEmoji","Messages","messagesElements","m","dialogId","createdAt","class","messageItems","scrollableTarget","fetchMoreMessages","inverse","endMessage","textAlign","msgHistoryText","fetchMoreMessagesProgress","displayDownButton","scrolldownBtn","MessagesContainer","scrollPosition","authorId","socket","emit","emoji","native","io","on","sendMessageActionCreator","sendId","close","resetDialogMessages","totalMessages","fetchMoreMessagesAction","App","initialize","exact","path","LoginPage","RegisterPage","DefaultContainer","render","exec","Title","title","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4417df52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"otherWrapper\":\"Settings_otherWrapper__2iN7n\",\"progress\":\"Settings_progress__18Qb5\",\"signOutButton\":\"Settings_signOutButton__1lzH0\",\"signOutIcon\":\"Settings_signOutIcon__1xqfW\",\"tfaField\":\"Settings_tfaField__1Emg0\",\"tfaRow\":\"Settings_tfaRow__20vEY\",\"tfaSwitch\":\"Settings_tfaSwitch__2lwm5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"TwoFactorValidation_page__3RY-T\",\"wrapper\":\"TwoFactorValidation_wrapper__2Pev1\",\"form_row\":\"TwoFactorValidation_form_row__2LWSh\",\"codeRow\":\"TwoFactorValidation_codeRow__1Wilm\",\"tfa_image\":\"TwoFactorValidation_tfa_image__3FRSK\",\"submitBtn\":\"TwoFactorValidation_submitBtn__1en6w\",\"login_progress\":\"TwoFactorValidation_login_progress__3mi5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_wrapper\":\"Contact_contact_wrapper__3zZCc\",\"profile_image\":\"Contact_profile_image__2NRiN\",\"profile_message\":\"Contact_profile_message__1E9nX\",\"profile_name\":\"Contact_profile_name___E7rb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Register_page__1ep4A\",\"wrapper\":\"Register_wrapper__1wFxq\",\"form\":\"Register_form__3LKBM\",\"middle\":\"Register_middle__3Nm9D\",\"signup_btn\":\"Register_signup_btn__25RmZ\",\"logo\":\"Register_logo__1684_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Message_userPhoto__3fBa8\",\"my_message\":\"Message_my_message__2tUqn\",\"other_message\":\"Message_other_message__3tVoz\",\"msg_wrapper\":\"Message_msg_wrapper__1K1jD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_info\":\"Dialog_profile_info__Zx9HJ\",\"profile_message\":\"Dialog_profile_message__29GBs\",\"profile_name\":\"Dialog_profile_name__2LzRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status_input\":\"ProfileStatus_status_input__2VgzJ\",\"no_status\":\"ProfileStatus_no_status__1890x\",\"user_status\":\"ProfileStatus_user_status__1k4q4\",\"user_image\":\"ProfileStatus_user_image__3wd_x\",\"pencil_icon\":\"ProfileStatus_pencil_icon__3aF4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginInputField\":\"FormControls_loginInputField__2xo8u\",\"loginFormWrapper\":\"FormControls_loginFormWrapper__1x5yo\",\"error\":\"FormControls_error__1FFtK\",\"loginErrorIcon\":\"FormControls_loginErrorIcon__3ekov\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f2fae100.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Posts_postsBlock__2AH0W\",\"posts\":\"Posts_posts__tkALa\",\"postsTitle\":\"Posts_postsTitle__2z41B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageProgress\":\"Profile_pageProgress__mHXHO\",\"alert\":\"Profile_alert__7TPZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DialogsSearchField_wrapper__3JguS\",\"field\":\"DialogsSearchField_field__1C-YQ\"};","module.exports = __webpack_public_path__ + \"static/media/loader.5fe0e55f.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postForm\":\"ReduxFormControls_postForm__14mhO\",\"error\":\"ReduxFormControls_error__3vArV\"};","module.exports = __webpack_public_path__ + \"static/media/loader2.56db5eff.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","module.exports = __webpack_public_path__ + \"static/media/signin.889bc3a8.png\";","module.exports = __webpack_public_path__ + \"static/media/tfa_auth.735af701.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigate_nav__3eGuc\",\"item\":\"Navigate_item__15Wqc\",\"itemName\":\"Navigate_itemName__37tnU\",\"activeLink\":\"Navigate_activeLink__3J4r6\",\"icon\":\"Navigate_icon__3kIZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friend_wrapper__1-0u9\",\"profile_image\":\"Friend_profile_image__2_ytI\",\"profile_block\":\"Friend_profile_block__24P0j\",\"profile_name\":\"Friend_profile_name__2EF6U\",\"convBtn\":\"Friend_convBtn__25aXq\",\"removeBtn\":\"Friend_removeBtn__1ZKX5\",\"removeIcon\":\"Friend_removeIcon__19YuD\",\"convIcon\":\"Friend_convIcon__3JNw7\",\"actions\":\"Friend_actions__vtOoS\",\"vl\":\"Friend_vl__3nf1t\",\"add_btn\":\"Friend_add_btn__3-njy\",\"undo_btn\":\"Friend_undo_btn__1E76e\",\"status\":\"Friend_status__22zDj\",\"friend_status\":\"Friend_friend_status__nNHPF\",\"inventation_status\":\"Friend_inventation_status__2Lrwt\",\"friend_icon\":\"Friend_friend_icon__1A2XM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileDescription_descriptionBlock__3-e2s\",\"user_description\":\"ProfileDescription_user_description__1WOh6\",\"headerPhoto\":\"ProfileDescription_headerPhoto__MEKox\",\"user_image_block\":\"ProfileDescription_user_image_block__3aB6A\",\"user_image\":\"ProfileDescription_user_image__6NePB\",\"user_name\":\"ProfileDescription_user_name__3qXI5\",\"change_photo_btn\":\"ProfileDescription_change_photo_btn__PXjNM\",\"userActionsIcon\":\"ProfileDescription_userActionsIcon__3dFBQ\",\"friendStatus\":\"ProfileDescription_friendStatus__1UfuE\",\"imagesBlock\":\"ProfileDescription_imagesBlock__3Cp_w\",\"cropModalButtons\":\"ProfileDescription_cropModalButtons__1W4Z2\",\"pictureLoader\":\"ProfileDescription_pictureLoader__Z0Zzv\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios'\nimport rateLimit from 'axios-rate-limit';\n\nconst instance = rateLimit(axios.create({\n    baseURL: 'https://chilltime-app.herokuapp.com/api/posts',\n    withCredentials: true\n}), { maxRequests: 2, perMilliseconds: 1000, maxRPS: 2 })\n\nexport const postsAPI = {\n    getProfilePosts(userId) {\n        return instance.get(`?userId=${userId}&limit=5`)\n        .then(response => {\n            return response.data;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n\n    addNewPost(post_content){\n        return instance.post(`/add`, \n            {\n               content: post_content\n            })\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    updatePost(id, post_content) {\n        return instance.put('/update',\n            {\n                id,\n                content: post_content\n            })\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    deletePost(post_id) {\n        return instance.delete(`/delete?id=${post_id}`)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    }\n}","import axios from 'axios'\nimport rateLimit from 'axios-rate-limit';\n\nconst instance = rateLimit(axios.create({\n    baseURL: 'https://chilltime-app.herokuapp.com/api/profile',\n    withCredentials: true\n}), { maxRequests: 2, perMilliseconds: 1000, maxRPS: 2 })\n\nexport const profileAPI = {\n    getProfilePage(userId) {\n        let requestURL = `https://chilltime-app.herokuapp.com/api/users?userId=${userId}`\n        return instance.get(requestURL)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    updateProfilePicture(img){\n        return instance.put('/profile_picture', img, \n            { \n                headers: {\n                    'content-type': 'multipart/form-data'\n                }\n            })\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    updateProfileStatus(user_status){\n        return instance.put('/status',\n            {\n                status: user_status\n            })\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    getProfileStatus(userId){\n        return instance.get(`/status/${userId}`)\n        .then(response => {\n            return response.data;\n        }).catch((error) => {\n            return error.response\n        })\n    }\n}","import axios from 'axios'\nimport rateLimit from 'axios-rate-limit';\n\nconst instance = rateLimit(axios.create({\n    baseURL: 'https://chilltime-app.herokuapp.com/api/friendship',\n    withCredentials: true\n}), { maxRequests: 2, perMilliseconds: 1000, maxRPS: 2 })\n\ninstance.getMaxRPS();\n\nexport const friendshipAPI = {\n    getProfileFriends(userId, pagination) {\n        return instance.get(`/friends/${userId}?page=${pagination}`)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    getProfileInvitations(pagination) {\n        return instance.get(`/invitations/received?page=${pagination}`)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    removeFriend(userId) {\n        return instance.delete(`/remove/${userId}`)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    sendInvitation(userId) {\n        return instance.post(`/send/${userId}`,\n            { \n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }\n            },\n            { withCredentials: true })\n        .then(response => {\n            return response.data;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    cancelInvitation(userId) {\n        return instance.delete(`/cancel/${userId}`)\n        .then(response => {\n            return response.data;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    acceptInvitation(userId) {\n        return instance.put(`/accept/${userId}`)\n        .then((response) => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    rejectInvitation(userId) {\n        return instance.put(`/reject/${userId}`)\n        .then((response) => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    }\n}","import { postsAPI } from \"../api/posts-api\"\nimport { profileAPI } from \"../api/profile-api\"\nimport { friendshipAPI } from \"../api/friendship-api\"\n\nconst ADD_POST = \"ADD-POST\";\nconst UPDATE_POST = \"UPDATE-POST\";\nconst DELETE_POST = \"DELETE-POST\";\nconst SET_EDITED_POST = \"SET-EDITED-POST\";\nconst SET_PROFILE_PAGE = \"SET-PROFILE-PAGE\"\nconst RESET_PROFILE_PAGE = 'RESET-PROFILE-PAGE'\nconst SET_PROFILE_POSTS = \"SET-PROFILE-POSTS\"\nconst SET_PROFILE_FRIENDS = \"SET-PROFILE-FRIENDS\"\nconst UPDATE_PROFILE_PICTURE = \"UPDATE-PROFILE-PICTURE\"\nconst UPDATE_PROFILE_STATUS = \"UPDATE-PROFILE-STATUS\"\nconst SEND_INVITATION = 'SEND-INVITATION'\nconst PICTURE_UPLOAD_PROGRESS = 'PICTURE-UPLOAD-PROGRESS'\nconst DISPLAY_SUC_MESSAGE = 'DISPLAY-SUC-MESSAGE'\nconst DISPLAY_ERROR_MESSAGE = 'DISPLAY-ERROR-MESSAGE'\nconst RESET_MODAL_MESSAGE = 'RESET-MODAL-MESSAGE'\n\nexport const addPostAction = (post) => ({ type: ADD_POST, post });\nexport const updatePostAction = (data) => ({ type: UPDATE_POST, data });\nexport const deletePostAction = (post_id) => ({ type: DELETE_POST, post_id });\nexport const setEditedPostAction = (post) => ({ type: SET_EDITED_POST, post });\nexport const setProfilePageAction = (userInfo) => ({ type: SET_PROFILE_PAGE, userInfo });\nexport const resetProfilePageAction = () => ({ type: RESET_PROFILE_PAGE });\nexport const setProfilePostsAction = (posts) => ({ type: SET_PROFILE_POSTS, posts });\nexport const setProfileFriendsAction = (friends, totalFriends) => ({ type: SET_PROFILE_FRIENDS, friends, totalFriends });\nexport const updateProfilePictureAction = (img) => ({type: UPDATE_PROFILE_PICTURE, img});\nexport const updateStatusAction = (status) => ({type: UPDATE_PROFILE_STATUS, status});\nexport const sendInvitationAction = (userId, status) => ({ type: SEND_INVITATION, userId, status });\nexport const togglePicUploadProgress = (inProcess) => ({ type: PICTURE_UPLOAD_PROGRESS, inProcess });\nexport const displaySuccessfullMessage = (msg) => ({ type: DISPLAY_SUC_MESSAGE, msg });\nexport const displayErrorMessage = (msg) => ({ type: DISPLAY_ERROR_MESSAGE, msg });\nexport const resetModalMessage = () => ({ type: RESET_MODAL_MESSAGE });\n\n\n\nlet initialState = {\n    userInfo: {},\n    userFriends: [],\n    totalFriends: 0,\n    postsData: [],\n    editedPost: null,\n    pageFetching: true,\n    friendsFetching: true,\n    pictureUploading: false,\n    successfullMessage: null,\n    errorMessage: null,\n}\n\nexport const getProfileFriends = (userId, pagination) => {\n    return (dispatch) => {\n        friendshipAPI.getProfileFriends(userId, pagination).then(response => {\n            console.log(response)\n            dispatch(setProfileFriendsAction(response.data.items, response.data.totalFriends))\n        })\n    }\n}\n\nexport const getProfilePage = (userId) => (dispatch) => {\n    profileAPI.getProfilePage(userId).then(response => {\n        if(response.status === 200) {\n            dispatch(setProfilePageAction(response.data));\n        }\n    })\n    dispatch(getProfileFriends(userId, 1));\n    \n}\n\nexport const getProfilePosts = (userId) => {\n    return(dispatch) => {\n        postsAPI.getProfilePosts(userId).then(data => {\n            dispatch(setProfilePostsAction(data.posts))\n        })\n    }\n}\n\nexport const addPost = (post_content) => {\n    return(dispatch) => {\n        postsAPI.addNewPost(post_content).then(response => {\n            if(response.status === 201) {\n                dispatch(addPostAction(response.data.post));\n                dispatch(displaySuccessfullMessage(response.data.message));\n            } else {\n                dispatch(displayErrorMessage(response.data.message))\n            }\n        })\n    } \n}\n\n\nexport const updatePost = (id, post_content) => {\n    return(dispatch) => {\n        postsAPI.updatePost(id, post_content).then(response => {\n            if(response.status === 200) {\n                dispatch(updatePostAction(response.data.post));\n                dispatch(displaySuccessfullMessage(response.data.message));\n            } else {\n                dispatch(displayErrorMessage(response.data.message))\n            }\n            \n        })\n    } \n}\n\nexport const deletePost = (post_id, user_id) => (dispatch) => {\n    postsAPI.deletePost(post_id).then((response) => {\n        if(response.status === 201) {\n            dispatch(getProfilePosts(user_id))\n            dispatch(displaySuccessfullMessage(response.data.message));\n        } else {\n            dispatch(displayErrorMessage(response.data.message))\n        }\n    })\n}\n\nexport const updateProfilePicture = (img) => (dispatch) => {\n    dispatch(togglePicUploadProgress(true));\n    profileAPI.updateProfilePicture(img).then(response => {\n        if(response.status === 200) {\n            dispatch(updateProfilePictureAction(response.data.img));\n            dispatch(displaySuccessfullMessage(response.data.message));\n        }\n        else {\n            dispatch(displayErrorMessage(response.data.message))\n        }\n        dispatch(togglePicUploadProgress(false));\n    })\n    \n}\n\nexport const updateProfileStatus = (user_status) => {\n    return(dispatch) => {\n        profileAPI.updateProfileStatus(user_status).then(response => {\n            if(response.status === 200) {\n                dispatch(updateStatusAction(response.data.status))\n            } \n        })\n    }\n}\n\nexport const sendInvitation = (userId) => {\n    return(dispatch) => {\n        friendshipAPI.sendInvitation(userId).then(data => {\n            dispatch(sendInvitationAction(userId, data.friendshipStatus));\n        })\n    }\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            return {\n                ...state,\n                postsData: [action.post,...state.postsData.slice(0,4)],\n                newPostText: ''\n            }\n        }\n        case UPDATE_POST: {\n            console.log(action)\n            return {\n                ...state,\n                postsData: state.postsData.map(p => {\n                    if(p.id === action.data.id) {\n                        p.id = action.data.id\n                        p.content = action.data.content\n                    }\n                    return p;\n                }),\n            }\n        }\n        case DELETE_POST: {\n            state.postsData.map(p => {\n                if(p.id === action.post_id) {\n                    let index = state.postsData.indexOf(p);\n                    state.postsData.splice(index, 1);\n                }\n            })\n            return {\n                ...state,\n                postsData: [...state.postsData.slice(0,4)]\n                \n            }\n        }\n        case SET_EDITED_POST: {\n            return {\n                ...state,\n                editedPost: action.post\n            }\n        }\n        case SET_PROFILE_PAGE: {\n            return {\n                ...state,\n                userInfo: action.userInfo,\n                pageFetching: false\n            }\n        }\n        case RESET_PROFILE_PAGE: {\n            return {\n                ...state,\n                userInfo: {},\n                pageFetching: true\n            }\n        }\n        case SET_PROFILE_POSTS: {\n            return {\n                ...state,\n                postsData: action.posts\n            }\n        }\n        case SET_PROFILE_FRIENDS: {\n            return {\n                ...state,\n                userFriends: action.friends,\n                totalFriends: action.totalFriends\n            }\n        }\n        case UPDATE_PROFILE_STATUS: {\n            return {\n                ...state,\n                status: action.status // doesnt work\n            }\n\n        }\n        case UPDATE_PROFILE_PICTURE: {\n            let returnedInfo = {...state.userInfo};\n            returnedInfo.profile_image = action.img;\n            return {\n                ...state,\n                userInfo: returnedInfo\n            }\n\n        }\n        case PICTURE_UPLOAD_PROGRESS: {\n            return {\n                ...state,\n                pictureUploading: action.inProcess\n            }\n        }\n        case SEND_INVITATION: {\n            let returnedInfo = {...state.userInfo};\n            returnedInfo.friendshipStatus = action.status;\n            return {\n                ...state,\n                userInfo: returnedInfo\n            }\n        }\n        case DISPLAY_SUC_MESSAGE: {\n            return {\n                ...state,\n                successfullMessage: action.msg\n            }\n        }\n        case DISPLAY_ERROR_MESSAGE: {\n            return {\n                ...state,\n                errorMessage: action.msg\n            }\n        }\n        case RESET_MODAL_MESSAGE: {\n            return {\n                ...state,\n                successfullMessage: null,\n                errorMessage: null\n            }\n        }\n\n        default: return state;\n    }\n}\n\nexport default profileReducer;","import axios from 'axios'\nimport rateLimit from 'axios-rate-limit';\n\n\nconst instance = rateLimit(axios.create({\n    baseURL: 'https://chilltime-app.herokuapp.com/api/chat',\n    withCredentials: true\n}), { maxRequests: 2, perMilliseconds: 1000, maxRPS: 2 })\n\nexport const chatAPI = {\n    getProfileDialogs(pagination) {\n        return instance.get(`/dialogs?page=${pagination}`)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    getDialogMessages(receiveId, pagination) {\n        return instance.get(`/messages?target=${receiveId}&page=${pagination}`)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    sentMessage(receiveId, content) {\n        return instance.post('/sent', {\n            receiveId: receiveId,\n            content: content\n        })\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    getProfileDialogById(dialogid) {\n        return instance.get(`/dialogs?id=${dialogid}`)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    \n}\n","import { chatAPI } from \"../api/chat-api\"\nimport { friendshipAPI } from \"../api/friendship-api\"\n\nconst UPDATE_MESSAGE_BODY = \"UPDATE-MESSAGE-BODY\"\nconst SEND_MESSAGE = \"SEND-MESSAGE\"\nconst SET_PROFILE_DIALOGS = \"SET-PROFILE-DIALOGS\"\nconst SET_DIALOG_MESSAGES = \"SET-DIALOG-MESSAGES\"\nconst TOGGLE_DIALOGS_FETCHING = \"TOGGLE-DIALOGS-FETCHING\"\nconst TOGGLE_MESSAGES_FETCHING = \"TOGGLE-MESSAGES-FETCHING\"\nconst RESET_DIALOG = \"RESET-DIALOG\"\nconst SET_CURRENT_DIALOG = \"SET-CURRENT-DIALOG\"\nconst SET_PROFILE_CONTACTS = \"SET-PROFILE-CONTACTS\"\nconst FETCH_MORE_MESSAGES = \"FETCH-MORE-MESSAGES\"\nconst FETCH_MORE_DIALOGS = \"FETCH-MORE-DIALOGS\"\nconst FETCH_MORE_CONTACTS = \"FETCH-MORE-CONTACTS\"\n\nexport const sendMessageActionCreator = (message) => ({ type: SEND_MESSAGE, message })\nexport const updateMessageBodyActionCreator = (body) => ({ type: UPDATE_MESSAGE_BODY, body: body })\nexport const setProfileDialogsAction = (dialogs, dialogsCount) => ({ type: SET_PROFILE_DIALOGS, dialogs, dialogsCount})\nexport const setProfileDialogMessagesAction = (messages, messagesCount, messagesPagination) => ({ type: SET_DIALOG_MESSAGES, messages, messagesCount, messagesPagination })\nexport const toggleDialogsFetchingAction = (isFetching) => ({ type: TOGGLE_DIALOGS_FETCHING, isFetching})\nexport const toggleMessagesFetchingAction = (isFetching) => ({ type: TOGGLE_MESSAGES_FETCHING, isFetching})\nexport const resetDialogMessages = () => ({ type: RESET_DIALOG });\nexport const setCurrentDialogAction = (dialog_data) => ({ type: SET_CURRENT_DIALOG, dialog_data});\nexport const setProfileContactsAction = (contacts, totalContacts) => ({ type: SET_PROFILE_CONTACTS, contacts, totalContacts })\nexport const fetchMoreMessagesAction = (messages, pagination) => ({ type: FETCH_MORE_MESSAGES, messages, pagination})\nexport const fetchMoreDialogsAction = (dialogs, pagination) => ({ type: FETCH_MORE_DIALOGS, dialogs, pagination})\nexport const fetchMoreContactsAction = (contacts, pagination) => ({ type: FETCH_MORE_CONTACTS, contacts, pagination})\n\nlet initialState = {\n    dialogsData: [],\n    contactsData: [],\n    totalContacts: null,\n    dialogsCount: null,\n    messagesData: [],\n    messagesCount: null,\n    messagesPagination: 1,\n    dialogsPagination: 1,\n    contactsPagination: 1,\n    currentDialogData: null,\n    newMessageBody: \"\",\n    dialogsIsFetching: true,\n    messagesIsFetching: true\n}\n\nexport const getProfileDialogs = (pagination) => {\n    return (dispatch) => {\n        chatAPI.getProfileDialogs(pagination).then(response => {\n            dispatch(setProfileDialogsAction(response.data.items, response.data.totalDialogs));\n            dispatch(toggleDialogsFetchingAction(false));\n        })\n    }\n    \n}\n\nexport const getProfileContacts = (userId, pagination) => {\n    return (dispatch) => {\n        friendshipAPI.getProfileFriends(userId, pagination).then(data => {\n            dispatch(setProfileContactsAction(data.data.items, data.data.totalFriends))\n        })\n    }\n}\n\nexport const getProfileDialogById = (dialogid) => {\n    return (dispatch) => {\n        chatAPI.getProfileDialogById(dialogid).then(response => {\n            if(response.status === 200) {\n                dispatch(setCurrentDialogAction(response.data.items));\n            }\n            if(response.status === 404) {\n                console.log(response.data.message)\n            }\n        })\n    }\n}\n\nexport const getDialogMessages = (receiveId, pagination) => {\n    return(dispatch) => {\n        chatAPI.getDialogMessages(receiveId, pagination).then(response => {\n            if(response.status === 200) {\n                dispatch(setProfileDialogMessagesAction(response.data.items, response.data.totalMessages, response.data.page))\n                dispatch(getProfileDialogById(response.data.dialogId));\n                dispatch(toggleMessagesFetchingAction(false));\n            }\n            if(response.status === 404) {\n                dispatch(toggleMessagesFetchingAction(false));\n            }\n            \n        })\n    }\n}\n\nexport const fetchMoreMessages = (receiveId, pagination) => {\n    return(dispatch) => {\n        chatAPI.getDialogMessages(receiveId, pagination).then(response => {\n            if(response.status === 200) {\n                dispatch(fetchMoreMessagesAction(response.data.items, response.data.page))\n                \n            }\n        })\n    }\n}\n\nexport const fetchMoreDialogs = (pagination) => {\n    return(dispatch) => {\n        chatAPI.getProfileDialogs(pagination).then(response => {\n            if(response.status === 200) {\n                dispatch(fetchMoreDialogsAction(response.data.items, response.data.page))\n                \n            }\n        })\n    }\n}\n\nexport const fetchMoreContacts = (pagination) => {\n    return(dispatch) => {\n        chatAPI.getProfileContacts(pagination).then(response => {\n            if(response.status === 200) {\n                dispatch(fetchMoreContactsAction(response.data.items, response.data.page))\n                \n            }\n        })\n    }\n}\n\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_MESSAGE_BODY:\n            return {\n                ...state,\n                newMessageBody: action.body\n            }\n        case SEND_MESSAGE:\n            let body = state.newMessageBody;\n            return {\n                ...state,\n                newMessageBody: '',\n                messagesData: [action.message, ...state.messagesData,]\n            }\n        case SET_PROFILE_DIALOGS:\n            return {\n                ...state,\n                dialogsData: action.dialogs,\n                dialogsCount: action.dialogsCount\n            }\n        case SET_PROFILE_CONTACTS: {\n            return {\n                ...state,\n                contactsData: action.contacts,\n                totalContacts: action.totalContacts\n            }\n        }\n        case SET_CURRENT_DIALOG:\n            return {\n                ...state,\n                currentDialogData: action.dialog_data\n            }\n        case SET_DIALOG_MESSAGES:\n            return {\n                ...state,\n                messagesData: action.messages,\n                messagesCount: action.messagesCount,\n                messagesPagination: action.messagesPagination\n            }\n        case FETCH_MORE_MESSAGES:\n            return {\n                ...state,\n                messagesData: [...state.messagesData, ...action.messages],\n                messagesPagination: action.pagination\n            }\n        case FETCH_MORE_DIALOGS:\n            return {\n                ...state,\n                dialogsData: [...state.dialogsData, ...action.dialogs],\n                dialogsPagination: action.pagination\n            }\n        case FETCH_MORE_CONTACTS:\n            return {\n                ...state,\n                contactsData: [...state.contactsData, ...action.contacts],\n                contactsPagination: action.pagination\n            }\n        case RESET_DIALOG:\n            return {\n                ...state,\n                messagesData: [],\n                currentDialogData: null,\n                messagesCount: null,\n                messagesIsFetching: true,\n                messagesPagination: 1\n            }\n        case TOGGLE_DIALOGS_FETCHING:\n            return {\n                ...state,\n                dialogsIsFetching: action.isFetching\n            }\n        case TOGGLE_MESSAGES_FETCHING:\n            return {\n                ...state,\n                messagesIsFetching: action.isFetching\n            }\n        default: return state;\n    }\n}\n\nexport default dialogsReducer;","import { friendshipAPI } from \"../api/friendship-api\"\nimport { profileAPI } from \"../api/profile-api\"\n\nconst SET_PROFILE_INFO = 'SET-PROFILE-INFO'\nconst SET_FRIENDS = 'SET-FRIENDS';\nconst SET_INVITATIONS = 'SET-INVITATIONS';\nconst SET_PAGE = 'SET-PAGE'\nconst RESET_PAGE = 'RESET-PAGE'\nconst SEND_INVITATION = 'SEND-INVITATION'\nconst CANCEL_INVITATION = 'CANCEL-INVITATION'\nconst ACCEPT_INVITATION = 'ACCEPT-INVITATION'\nconst REJECT_INVITATION = 'REJECT-INVITATION'\nconst REMOVE_FRIEND = 'REMOVE-FRIEND'\nconst FETCH_FRIENDS = 'FETCH-FRIENDS'\nconst FETCH_INVITATIONS = 'FETCH-INVITATIONS'\n\nexport const setProfileInfoAction = (userInfo) => ({ type: SET_PROFILE_INFO, userInfo })\nexport const setProfileFriendsAction = (friends, totalFriends) => ({ type: SET_FRIENDS, friends, totalFriends })\nexport const setProfileInvitationsAction = (invitations, totalInvitations) => ({ type: SET_INVITATIONS, invitations, totalInvitations })\nexport const setFriendsPageAction = () => ({ type: SET_PAGE });\nexport const resetFriendsPageAction = () => ({ type: RESET_PAGE });\nexport const sendInvitationAction = (userId) => ({ type: SEND_INVITATION, userId });\nexport const cancelInvitationAction = (userId) => ({ type: CANCEL_INVITATION, userId });\nexport const acceptInvitationAction = (userId) => ({ type: ACCEPT_INVITATION, userId });\nexport const rejectInvitationAction = (userId) => ({ type: REJECT_INVITATION, userId });\nexport const removeFriendAction = (userId) => ({ type: REMOVE_FRIEND, userId });\nexport const fetchMoreFriendsAction = (friends, page) => ({ type: FETCH_FRIENDS, friends, page })\nexport const fetchMoreInvitationsAction = (invitations, page) => ({ type: FETCH_INVITATIONS, invitations, page })\n\nlet initialState = {\n    pageFetching: true,\n    friends: [],\n    userInfo: null,\n    invitations: [],\n    totalFriends: null,\n    totalInvitations: null,\n    friendsPagination: 1,\n    invitationsPagination: 1\n}\n\nexport const getFriendsPage = (userId, friendsPagination, invitationsPagination) => (dispatch) => {\n    let friendsPromise = dispatch(getProfileFriends(userId, friendsPagination));\n    let invitationsPromise = dispatch(getProfileInvitations(invitationsPagination));\n    let profilePromise = dispatch(getProfileInfo(userId));\n\n    Promise.all([profilePromise, friendsPromise, invitationsPromise]).then(() => {\n            dispatch(setFriendsPageAction());\n        })\n    \n}\n\nexport const getProfileInfo = (userId) => (dispatch) => {\n    return profileAPI.getProfilePage(userId).then(response => {\n        if(response.status === 200) {\n            dispatch(setProfileInfoAction(response.data));\n        }\n    })\n}\nexport const getProfileFriends = (userId, pagination) => (dispatch) => {\n    return friendshipAPI.getProfileFriends(userId, pagination).then(response => {\n            if(response.status === 200) {\n                dispatch(setProfileFriendsAction(response.data.items, response.data.totalFriends))\n            }\n        })\n}\n\nexport const getProfileInvitations = (pagination) => (dispatch) => {\n    return friendshipAPI.getProfileInvitations(pagination).then(response => {\n            if(response.status === 200) {\n                dispatch(setProfileInvitationsAction(response.data.items, response.data.receivedInvitations))\n            }\n        })\n}\nexport const sendInvitation = (userId) => {\n    return(dispatch) => {\n        friendshipAPI.sendInvitation(userId).then(data => {\n            dispatch(sendInvitationAction(userId, data.friendshipStatus));\n        })\n    }\n}\n\nexport const cancelInvitation = (userId) => {\n    return(dispatch) => {\n        friendshipAPI.cancelInvitation(userId).then(data => {\n            dispatch(cancelInvitationAction(userId));\n        })\n    }\n}\nexport const acceptInvitation = (userId) => {\n    return(dispatch) => {\n        friendshipAPI.acceptInvitation(userId).then(response => {\n            if(response.status === 200) {\n                dispatch(acceptInvitationAction(userId));\n            }\n        })\n    }\n}\n\nexport const rejectInvitation = (userId) => {\n    return(dispatch) => {\n        friendshipAPI.rejectInvitation(userId).then(response => {\n            if(response.status === 200) {\n                dispatch(rejectInvitationAction(userId));\n            }\n        })\n    }\n}\n\nexport const removeFriend = (userId) => {\n    return(dispatch) => {\n        friendshipAPI.removeFriend(userId).then(response => {\n            if(response.status === 200) {\n                dispatch(removeFriendAction(userId));\n            }\n        })\n    }\n}\n\nexport const fetchMoreFriends = (userId, pagination) => {\n    return(dispatch) => {\n        friendshipAPI.getProfileFriends(userId, pagination).then(response => {\n            if(response.status === 200) {\n                dispatch(fetchMoreFriendsAction(response.data.items, response.data.page))\n                \n            }\n        })\n    }\n}\nexport const fetchMoreInvitations = (pagination) => {\n    return(dispatch) => {\n        friendshipAPI.getProfileInvitations(pagination).then(response => {\n            if(response.status === 200) {\n                dispatch(fetchMoreInvitationsAction(response.data.items, response.data.page))\n            }\n        })\n    }\n}\n\n\n\nconst friendsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_PROFILE_INFO: {\n            return {\n                ...state,\n                userInfo: action.userInfo,\n            }\n        }\n        case SET_PAGE: {\n            return {\n                ...state,\n                pageFetching: false\n            }\n        }\n        case RESET_PAGE: {\n            return {\n                ...state,\n                friends: [],\n                userInfo: null,\n                invitations: [],\n                totalFriends: null,\n                totalInvitations: null,\n                pageFetching: true,\n                friendsPagination: 1,\n                invitationsPagination: 1\n            }\n        }\n        case SET_FRIENDS: {\n            return {\n                ...state,\n                friends: action.friends,\n                totalFriends: action.totalFriends\n            }\n        }\n        case SET_INVITATIONS: {\n            return {\n                ...state,\n                invitations: action.invitations,\n                totalInvitations: action.totalInvitations\n            }\n        }\n        case SEND_INVITATION:\n            return {\n                ...state,\n                friends: state.friends.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, friendshipStatus: 1}\n                    }\n                    return u;\n                }),\n            }\n        case CANCEL_INVITATION:\n            return {\n                ...state,\n                friends: state.friends.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, friendshipStatus: 0}\n                    }\n                    return u;\n                }),\n            }\n        case ACCEPT_INVITATION: {\n            return {\n                ...state,\n                invitations: state.invitations.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, friendshipStatus: 2}\n                    }\n                    return u;\n                })\n            }\n        }\n        case REJECT_INVITATION: {\n            return {\n                ...state,\n                invitations: state.invitations.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, friendshipStatus: 3}\n                    }\n                    return u;\n                })\n            }\n        }\n        case REMOVE_FRIEND: {\n            state.friends.map(u => {\n                if(u.id === action.userId) {\n                    let index = state.friends.indexOf(u);\n                    state.friends.splice(index, 1);\n                }\n            })\n            return {\n                ...state,\n                friends: [...state.friends],\n                totalFriends: state.totalFriends - 1\n                \n            }\n        }\n        case FETCH_FRIENDS:\n            return {\n                ...state,\n                friends: [...state.friends, ...action.friends],\n                friendsPagination: action.page\n            }\n        case FETCH_INVITATIONS:\n            return {\n                ...state,\n                invitations: [...state.invitations, ...action.invitations],\n                invitationsPagination: action.page\n            }\n        default: return state;\n    }\n}\n\nexport default friendsReducer;","import axios from 'axios'\nimport rateLimit from 'axios-rate-limit';\n\nconst instance = rateLimit(axios.create({\n    baseURL: 'https://chilltime-app.herokuapp.com/api/users',\n    withCredentials: true\n}), { maxRequests: 2, perMilliseconds: 1000, maxRPS: 2 })\n\nexport const usersAPI = {\n    getUsers(currentPage) {\n        return instance.get(`?page=${currentPage}`)\n        .then(response => {\n            return response.data;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    getUserByNamePartial(text) {\n        return instance.get(`?fullname=${text}`)\n        .then(response => {\n            console.log(response)\n            return response.data;\n        }).catch((error) => {\n            return error.response\n        })\n    }\n}","import { usersAPI } from \"../api/users-api\"\nimport { friendshipAPI } from \"../api/friendship-api\"\n\nconst SEND_INVITATION = \"SEND-INVITATION\"\nconst CANCEL_INVITATION = \"CANCEL-INVENTATION\"\nconst SEARCH_CLICK = \"SEARCH-CLICK\"\nconst SET_USERS = \"SET-USERS\"\nconst SET_PAGE = \"SET-PAGE\"\nconst RESET_PAGE = \"RESET-PAGE\"\nconst SHOW_MORE = \"SHOW-MORE\"\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\"\n\nexport const sendInvitationAction = (userId, status) => ({ type: SEND_INVITATION, userId, status })\nexport const cancelInvitationAction = (userId) => ({ type: CANCEL_INVITATION, userId })\nexport const onSearchClickAction = (text, filteredUsers, usersFound) => ({ type: SEARCH_CLICK, text: text, filteredUsers, usersFound})\nexport const setUsersAction = (users) => ({ type: SET_USERS, users })\nexport const showMoreAction = (users, pagination) => ({ type: SHOW_MORE, users, pagination })\nexport const setCurrentPageAction = (page) => ({type: SET_PAGE, page})\nexport const toggleIsFetchingAction = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const resetPage = () => ({ type: RESET_PAGE });\n\nexport const getUsers = (currentPage) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetchingAction(true));\n        usersAPI.getUsers(currentPage).then(data => {\n            dispatch(toggleIsFetchingAction(false));\n            dispatch(setUsersAction(data.items));\n        })\n    }\n}\n\nexport const getUsersBySearchQuery= (query, currentPage, pageSize) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetchingAction(true));\n        if(query.trim()) {\n            usersAPI.getUserByNamePartial(query.toLowerCase()).then(data => {\n                dispatch(toggleIsFetchingAction(false));\n                dispatch(onSearchClickAction(query, data.items, data.usersFound));\n            })\n        } else {\n            dispatch(toggleIsFetchingAction(true));\n            dispatch(onSearchClickAction(query, [], 0));\n            usersAPI.getUsers(currentPage).then(data => {\n                        dispatch(toggleIsFetchingAction(false));\n                        dispatch(setUsersAction(data.items));\n                    })\n            }\n    }\n}\n\nexport const getMoreUsers = (pagination) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetchingAction(true));\n        usersAPI.getUsers(pagination).then(data => {\n            dispatch(toggleIsFetchingAction(false));\n            dispatch(showMoreAction(data.items, pagination));\n        })\n    }\n}\n\nexport const sendInvitation = (userId) => {\n    return(dispatch) => {\n        friendshipAPI.sendInvitation(userId).then(data => {\n            dispatch(sendInvitationAction(userId, data.friendshipStatus));\n        })\n    }\n}\n\nexport const cancelInvitation = (userId) => {\n    return(dispatch) => {\n        friendshipAPI.cancelInvitation(userId).then(data => {\n            dispatch(cancelInvitationAction(userId));\n        })\n    }\n}\n\nlet initialState = {\n    users: [],\n    filteredUsers: [],\n    filter: false,\n    searchInput: \"\",\n    pageSize: 6,\n    totalUsersCount: null,\n    filteredUsersCount: 0,\n    currentPage: 1,\n    showMorePagination: 1,\n    isFetching: true\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_INVITATION:\n            return {\n                ...state,\n                filteredUsers: state.filteredUsers.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, friendshipStatus: action.status}\n                    }\n                    return u;\n                }),\n                users: state.users.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, friendshipStatus: action.status}\n                    }\n                    return u;\n                }),\n            }\n        case CANCEL_INVITATION:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, friendshipStatus: 0}\n                    }\n                    return u;\n                }),\n                filteredUsers: state.filteredUsers.map(u => {\n                    if(u.id === action.userId) {\n                        return {...u, friendshipStatus: 0}\n                    }\n                    return u;\n                })\n\n            }\n        case SEARCH_CLICK:\n            if (action.text != \"\") {\n                state.filter = true;\n                state.showMorePagination = 1\n                state.filteredUsersCount = action.usersFound\n            }\n            else {\n                state.filteredUsersCount = action.usersFound\n                state.filter = false;\n            }\n            return {\n                ...state,\n                searchInput: action.text,\n                filteredUsers: action.filteredUsers,\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.users\n            }\n        case SET_PAGE:\n            return {\n                ...state,\n                currentPage: action.page,\n\n            }\n        case RESET_PAGE:\n            return {\n                ...state,\n                users: [],\n                filteredUsers: [],\n                filter: false,\n                searchInput: \"\",\n                totalUsersCount: null,\n                filteredUsersCount: 0,\n                currentPage: 1,\n                showMorePagination: 1,\n                isFetching: true\n            }\n        case SHOW_MORE:\n            return {\n                ...state,\n                users: [...state.users, ...action.users],\n                showMorePagination: action.pagination\n            }\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching}\n        default: return state;\n    }\n}\n\nexport default usersReducer;","import axios from 'axios'\nimport rateLimit from 'axios-rate-limit';\n\nconst instance = axios.create({\n    baseURL: 'https://chilltime-app.herokuapp.com/api/user',\n    withCredentials: true\n})\n\nexport const authAPI = {\n    authMe() {\n        return instance.get('/me')\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    updateSettings(settings) {\n        return instance.put('/settings', { settings })\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    getQRCode(authId) {\n        return instance.get(`/qrcode?authId=${authId}`)\n        .then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    userRegister(data) {\n        return instance.post('/register', {\n            firstname: data.firstname,\n            lastname: data.lastname,\n            fullname: data.fullname,\n            email: data.email,\n            login: data.login,\n            gender: data.gender,\n            birthday: data.birthday,\n            age: data.age,\n            password: data.password\n        },).then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    userLogin(data) {\n        return instance.post('/login',{\n            login: data.login,\n            password: data.password\n        }).then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    userLogout() {\n        return instance.get('/logout').then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    twoFactorVerify(authId, authCode) {\n        return instance.put(`/verify`,{\n            authId,\n            authCode\n        }).then(response => {\n            return response;\n        }).catch((error) => {\n            return error.response\n        })\n    },\n    twoFactorValidate(authId, authCode) {\n        return instance.post(`/validate`,{\n            authId,\n            authCode\n        }).then(response => {\n            return response\n        }).catch((error) => {\n            return error.response\n        })\n    }\n}","import { authAPI } from \"../api/auth-api\"\n\nconst SET_USER_DATA = 'SET-USER-DATA';\nconst TOGGLE_REG_PROCESS = 'TOGGLE-REG-PROCESS'\nconst TOGGLE_LOG_PROCESS = 'TOGGLE-LOG-PROCESS'\nconst TOGGLE_SIGNOUT_PROCESS = 'TOGGLE-SIGNOUT-PROCESS'\nconst DISPLAY_AUTH_ERROR = 'DISPLAY-AUTH-ERROR'\nconst DISPLAY_REG_ERROR = 'DISPLAY-REG-ERROR'\nconst RESET_AUTH_ERROR = 'RESET-AUTH-ERROR'\nconst RESET_REG_ERROR = 'RESET-REG-ERROR'\nconst SET_INITIALIZED = 'SET-INITIALIZED'\nconst SET_QR_CODE = 'SET-QR-CODE';\nconst SET_AUTH_STAGE = 'SET-AUTH-STAGE'\nconst SET_AUTH_ID = 'SET-AUTH-ID'\nconst UPDATE_SETTINGS = 'UPDATE-SETTINGS'\n\nexport const setUserData = (id, login, email, settings, isAuth) => ({ type: SET_USER_DATA, data: { id, login, email, settings }, isAuth});\nexport const displayAuthError = (error_msg) => ({ type: DISPLAY_AUTH_ERROR, error_msg });\nexport const displayRegisterError = (error_msg) => ({ type: DISPLAY_REG_ERROR, error_msg });\nexport const resetRegError = () => ({ type: RESET_REG_ERROR });\nexport const resetAuthError = () => ({ type: RESET_AUTH_ERROR });\nexport const toggleRegFormInProcess = (inProcess) => ({ type: TOGGLE_REG_PROCESS, inProcess});\nexport const toggleLogFormInProcess = (inProcess) => ({ type: TOGGLE_LOG_PROCESS, inProcess});\nexport const toggleSignOutInProcess = (inProcess) => ({ type: TOGGLE_SIGNOUT_PROCESS, inProcess });\nexport const setInitializedAction = () => ({ type: SET_INITIALIZED });\nexport const setUserQRCodeAction = (qrcode) => ({ type: SET_QR_CODE, qrcode });\nexport const setAuthStageAction = (stage) => ({ type: SET_AUTH_STAGE, stage });\nexport const setUserAuthIdAction = (authId) => ({ type: SET_AUTH_ID, authId });\nexport const updateSettingsAction = (settings) => ({ type: UPDATE_SETTINGS, settings });\n\nlet initialState = {\n    id: null,\n    auth_id: null,\n    settings: null,\n    login: null,\n    email: null,\n    isAuth: false,\n    regError: false,\n    authError: false,\n    initialized: false,\n    authStage: 1,\n    regFormInProcess: false,\n    logFormInProcess: false,\n    signOutInProcess: false,\n    qrCode: null,\n}\n\nexport const authMe = () => (dispatch) => {\n    return authAPI.authMe().then((response) => {\n        if(response) {\n            if(response.status === 200) {\n                dispatch(setAuthStageAction(1))\n                let {id, login, email} = response.data.user;\n                let settings = response.data.settings;\n                dispatch(setUserData(id, login, email, settings, true))\n                dispatch(toggleLogFormInProcess(false));\n            }\n            if(response.status === 401) {\n                return false;\n            }\n        }\n    })\n}\n\nexport const updateSettings = (settings) => (dispatch) => {\n    return authAPI.updateSettings(settings).then((response) => {\n        if(response.status === 200) {\n            console.log(response)\n            dispatch(updateSettingsAction(response.data.settings));\n        }\n    })\n}\n\nexport const getUserQRCode = (authId) => (dispatch) => {\n    return authAPI.getQRCode(authId).then((response) => {\n        if(response.status === 200) {\n            dispatch(setUserQRCodeAction(response.data.QRCode))\n        }\n        if(response.status === 401) {\n            return false;\n        }\n    })\n    \n}\n\nexport const twoFactorAuthSetStage = (stage, authId) => (dispatch) => {\n    const setAuthIdPromise = dispatch(setUserAuthIdAction(authId));\n    const setAuthStagePromise = dispatch(setAuthStageAction(stage));\n    Promise.all([setAuthIdPromise, setAuthStagePromise]);\n}\n\nexport const verifyTwoFactorAuth = (authId, authCode) => (dispatch) => {\n    dispatch(toggleLogFormInProcess(true));\n    return authAPI.twoFactorVerify(authId, authCode).then(response => {\n        if(response.status === 200) {\n            dispatch(authMe())\n            dispatch(toggleLogFormInProcess(false));    \n        }\n        if(response.status === 404 || response.status === 400) {\n            dispatch(displayAuthError(response.data.message))\n        }\n    })\n}\n\nexport const validateTwoFactorAuth = (authId, authCode) => (dispatch) => {\n    dispatch(toggleLogFormInProcess(true));\n    return authAPI.twoFactorValidate(authId, authCode).then(response => {\n        if(response.status === 200) {\n            dispatch(authMe())\n        }\n        if(response.status === 404 || response.status === 400) {\n            dispatch(displayAuthError(response.data.message))\n        }\n        else {\n            return false\n        }\n        dispatch(toggleLogFormInProcess(false));\n    })\n}\n\nexport const userRegister = (data) => (dispatch) => {\n    dispatch(toggleRegFormInProcess(true));\n    return authAPI.userRegister(data).then((response) => {\n        if(response.status === 201) {\n            console.log(response)\n            dispatch(userLogin(data));\n        }\n        if(response.status === 400) {\n            dispatch(displayRegisterError(response.data.message))\n        }\n    })\n}\n\nexport const userLogin = (data) => (dispatch) => {\n    dispatch(toggleLogFormInProcess(true));\n    return authAPI.userLogin(data).then(response => {\n        console.log(response)\n        if(response.status === 200) {\n            if(response.data.verified == false) {\n                console.log(response.data)\n                dispatch(twoFactorAuthSetStage(3, response.data.authId))\n                dispatch(getUserQRCode(response.data.authId))\n            }\n            if(response.data.twoFactorAuthSetting == false) {\n                dispatch(authMe())\n            } else {\n                dispatch(twoFactorAuthSetStage(2, response.data.authId))\n            }\n        }\n        if(response.status === 404 || response.status === 400 || response.status === 401 || response.status === 500){\n            dispatch(displayAuthError(response.data.message))\n        }\n        dispatch(toggleLogFormInProcess(false));\n    })\n    \n}\n\nexport const userLogout = () => (dispatch) => {\n    dispatch(toggleSignOutInProcess(true))\n    return authAPI.userLogout().then(response =>{\n        if(response.status === 200) {\n            dispatch(setUserData(null, null, null, null, false))\n            dispatch(toggleSignOutInProcess(false))\n        }\n    })\n}\n\nexport const initialize = () => (dispatch) => {\n    let initData = dispatch(authMe());\n    initData.then(() => {\n        dispatch(setInitializedAction());\n    })\n}\n\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        \n        case SET_USER_DATA: {\n            return {\n                ...state,\n                ...action.data,\n                isAuth: action.isAuth\n            }\n        }\n        case SET_INITIALIZED: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        case TOGGLE_REG_PROCESS: {\n            return {\n                ...state,\n                regFormInProcess: action.inProcess\n            }\n        }\n        case TOGGLE_LOG_PROCESS: {\n            return {\n                ...state,\n                logFormInProcess: action.inProcess\n            }\n        }\n        case TOGGLE_SIGNOUT_PROCESS: {\n            return {\n                ...state,\n                signOutInProcess: action.inProcess\n            }\n        }\n        case SET_AUTH_ID: {\n            return {\n                ...state,\n                auth_id: action.authId\n            }\n        }\n        case SET_AUTH_STAGE: {\n            return {\n                ...state,\n                authStage: action.stage\n            }\n        }\n        case SET_QR_CODE: {\n            return {\n                ...state,\n                qrCode: action.qrcode\n            }\n        }\n        case DISPLAY_AUTH_ERROR: {\n            return {\n                ...state,\n                authError: action.error_msg,\n                logFormInProcess: false\n            }\n        }\n        case DISPLAY_REG_ERROR: {\n            return {\n                ...state,\n                regError: action.error_msg,\n                regFormInProcess: false\n            }\n        }\n        case RESET_AUTH_ERROR: {\n            return {\n                ...state,\n                authError: false\n            }\n        }\n        case RESET_REG_ERROR: {\n            return {\n                ...state,\n                regError: false\n            }\n        }\n        case UPDATE_SETTINGS: {\n            return {\n                ...state,\n                settings: action.settings\n            }\n        }\n        default: return state;\n    }\n}\n\n\n\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from 'redux-thunk';\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport friendsReducer from './friends-reducer';\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport { reducer as formReducer } from 'redux-form'\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    friendsPage: friendsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer\n})\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\nwindow.store = store;\nexport default store;","import React from 'react';\nimport styles from './Navigate.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { CgProfile } from 'react-icons/cg'\nimport { BiNews } from 'react-icons/bi'\nimport { RiSettings5Line } from 'react-icons/ri'\nimport { IoMdContacts } from 'react-icons/io'\nimport { GoSearch } from 'react-icons/go'\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\n\nconst Navigate = () => {\n    return (\n        <nav className = {styles.nav}>\n            <NavLink to = '/profile' activeClassName={styles.activeLink}><div className = {styles.item}><span className={styles.icon}><CgProfile/></span><span className={styles.itemName}>PROFILE</span></div></NavLink>\n            <NavLink to = '/dialogs' activeClassName={styles.activeLink}><div className = {styles.item}><span className={styles.icon}><MailOutlineIcon style={{fontSize: '27px'}}/></span><span className={styles.itemName}>MESSAGES</span></div></NavLink>\n            <NavLink to = '/friends' activeClassName={styles.activeLink}><div className = {styles.item}><span className={styles.icon}><IoMdContacts/></span><span className={styles.itemName}>FRIENDS</span></div></NavLink>\n            {/* <NavLink to = '/news' activeClassName={styles.activeLink}><div className = {styles.item}><span className={styles.icon}><BiNews/></span><span className={styles.itemName}>NEWS</span></div></NavLink> */}\n            <NavLink to = '/settings' activeClassName={styles.activeLink}><div className = {styles.item}><span className={styles.icon}><RiSettings5Line/></span><span className={styles.itemName}>SETTINGS</span></div></NavLink>\n            <span><hr/></span>\n            <NavLink to = '/users' activeClassName={styles.activeLink}><div className = {styles.item}><span className={styles.icon}><GoSearch/></span><span className={styles.itemName}>FIND FRIENDS</span></div></NavLink>\n    </nav>\n    );\n}\n\nexport default Navigate;","import React from 'react';\nimport styles from './News.module.css'\n\nconst News = (props) => {\n    return (\n        <div>\n            <span>News should be here</span>\n        </div>\n    )\n}\n\nexport default News;","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport connect from \"react-redux/lib/connect/connect\";\nimport withRouter from \"react-router-dom/withRouter\"\nimport { compose } from 'redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(this.props.isAuth === false){\n                return <Redirect to={'/login'}/>\n            }\n            return <Component {...this.props}/>\n        }\n    }\n    let ConnectedAuthRedirectComponent = compose(\n        connect(mapStateToPropsForRedirect),\n        withRouter\n    )(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}\n","import React from 'react';\nimport styles from './Friends.module.css'\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { BiMessageSquareAdd } from 'react-icons/bi'\nimport { FaUserFriends } from 'react-icons/fa'\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { NavLink } from 'react-router-dom';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n\nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\n\nconst Friends = (props) => {\n    let isAuthUserPage = false;\n    if(props.profilePageId === undefined || props.profilePageId == props.authData.id) {\n        isAuthUserPage = true;\n    }\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n            <div className={classes.root}>\n                { isAuthUserPage === true ?\n                  <div>\n                    <div>\n                      <AppBar position=\"static\">\n                        <Tabs variant='fullWidth' centered value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                        <Tab icon={<FaUserFriends/>} label={`Friends(${props.friendsPage.totalFriends})`} {...a11yProps(0)} />\n                        <Tab icon={<BiMessageSquareAdd/>} label={`Friendship invitations(${props.friendsPage.totalInvitations})`} {...a11yProps(1)} />\n                        </Tabs>\n                      </AppBar>\n                    </div>\n                    <div>\n                      <TabPanel value={value} index={0}>\n                        {\n                          props.friends.length != 0 ?\n                            <InfiniteScroll\n                              dataLength={props.friends.length}\n                              next={props.fetchMoreFriends}\n                              style={{ overflow:'auto' }}\n                              hasMore={ props.friends.length > 0 ? props.hasMoreFriends : false }\n                              loader={<div className={styles.fetchMoreProgress}><CircularProgress/></div>}>\n                            <div className={styles.contentBlock}>{props.friends}</div>      \n                            </InfiniteScroll>\n                          :\n                          <div className={styles.emptyListBlock}>\n                            <label>The friends list is empty. You can find friends <NavLink to='/users'>here</NavLink></label>\n                          </div>\n\n                        }\n                      </TabPanel>\n                      <TabPanel value={value} index={1}>\n                        {\n                          props.invitations.length != 0 ?\n                            <InfiniteScroll\n                            dataLength={props.invitations.length}\n                            next={props.fetchMoreInvitations}\n                            style={{ overflow:'hidden' }}\n                            hasMore={ props.invitations.length > 0 ? props.hasMoreInvitations : false }\n                            loader={<div className={styles.fetchMoreProgress}><CircularProgress/></div>}>\n                            <div className={styles.contentBlock}>{props.invitations}</div>      \n                          </InfiniteScroll>\n                          :\n                          <div className={styles.emptyListBlock}>\n                            <label>The invitation list is empty</label>\n                          </div>\n                        }\n                        \n                      </TabPanel>\n                    </div>\n                </div>\n              : \n                <div>\n                  <div>\n                    <AppBar position=\"static\">\n                      <Tabs variant='fullWidth' centered value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                      <Tab icon={<FaUserFriends/>} label={`${props.userInfo.first_name}'s Friends(${props.friendsPage.totalFriends})`} {...a11yProps(0)} />\n                      </Tabs>\n                    </AppBar>\n                  </div>\n                  <div>\n                    <TabPanel value={value} index={0}>\n                      {\n                        props.friends.length != 0 ?\n                        <div className={styles.contentBlock}>\n                          {props.friends}\n                        </div>\n                      :\n                        <div className={styles.emptyListBlock}>\n                          <label>{props.userInfo.first_name}'s friends list is empty</label>\n                        </div>\n                      }\n                   \n                    </TabPanel>\n                  </div>\n                </div>\n              \n              }\n                \n            </div>\n    )\n}\n\nexport default Friends;","import React from 'react'\nimport styles from './Friend.module.css'\nimport {Button} from \"react-bootstrap\";\nimport {faUndo, faUserFriends, faUserPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {NavLink} from \"react-router-dom\";\nimport { BiConversation } from 'react-icons/bi'\nimport { AiOutlineUserDelete } from 'react-icons/ai'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\n\nconst Friend = (props) => {\n    let isAuthUserPage = false;\n    if(props.profilePageId === undefined || props.profilePageId == props.authData.id) {\n        isAuthUserPage = true;\n    }\n    return(\n        <div>\n            { isAuthUserPage ?\n                <div className={styles.profile_block}>\n                    <div className={styles.profile_image}><img src={props.image} /></div>\n                    <NavLink to={ \"/profile/\" + props.id }><span className={styles.profile_name}><b>{props.fullname}</b></span></NavLink>\n                    <div className={styles.actions}>\n                        <NavLink to={'/dialogs/' + props.id}>\n                            <Button className={styles.convBtn} variant=\"info\">Send private message\n                                <span className={styles.convIcon}><BiConversation/></span></Button>\n                        </NavLink>\n                        <Button onClick={()=> { props.removeFriend(props.id) }} className={styles.removeBtn} variant=\"info\">Remove from friends\n                            <span className={styles.removeIcon}><AiOutlineUserDelete/></span></Button>\n                    </div>\n                </div>\n            :\n            <div className={styles.profile_block}>\n                <div className={styles.profile_image}><img src={props.image} /></div>\n                    <NavLink to={ \"/profile/\" + props.id }><span className={styles.profile_name}><b>{props.fullname}</b></span></NavLink>\n                    <div className={styles.status}>\n                    {props.friendshipStatus === 1 ? <div><span className={styles.inventation_status}>{\"Friend invitation sent\"}</span><Button onClick={()=> { props.cancelInvitation(props.id) }} className={styles.undo_btn} size=\"sm\" variant=\"danger\">cancel <FontAwesomeIcon className={styles.friend_icon} icon={faUndo}/></Button>{' '}</div> :\n                        props.friendshipStatus === 2 ? <span className={styles.friend_status}><b>{\"You are friends\"}</b><FontAwesomeIcon className={styles.friend_icon} icon={faUserFriends}/></span>\n                            : <Button onClick={()=> { props.sendInvitation(props.id) }} className={styles.add_btn} variant=\"outline-success\">Add friend <span className={styles.vl}></span>\n                                <FontAwesomeIcon icon={faUserPlus}/></Button> }\n                    </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default Friend;","import React from 'react'\nimport styles from './Invitation.module.css'\nimport {Button} from \"react-bootstrap\";\nimport {faUndo, faUserFriends, faUserPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {NavLink} from \"react-router-dom\";\nimport { AiOutlineUserAdd } from 'react-icons/ai'\nimport { ImCross } from 'react-icons/im'\n\nconst Invitation = (props) => {\n    return(\n        <div className={styles.profile_block}>\n                <div className={styles.profile_image}><img src={props.image} /></div>\n                <NavLink to={ \"/profile/\" + props.id }><span className={styles.profile_name}><b>{props.fullname}</b></span></NavLink>\n                <span>{props.age} years, {props.city}</span>\n                <div className={styles.actions}>\n                    { props.friendshipStatus === 1 ? \n                    <div>\n                        <Button onClick={()=> { props.acceptRequest(props.id) }} className={styles.acceptBtn} variant=\"info\">Accept friend request\n                            <span className={styles.acceptIcon}><AiOutlineUserAdd/></span></Button>\n                        <Button onClick={()=> { props.rejectRequest(props.id) }} className={styles.rejectBtn} variant=\"info\">Reject request\n                            <span className={styles.rejectIcon}><ImCross/></span></Button>\n                    </div>\n                    :\n                    <div>\n                        { props.friendshipStatus === 2 ? <span className={styles.acceptMsg}>Request accepted</span> : null ||\n                          props.friendshipStatus === 3 ? <span className={styles.rejectMsg}>Request rejected</span> : null\n                         }\n                    </div>\n                    }\n                </div>\n\n            </div>\n    )\n}\n\nexport default Invitation;","import React from 'react';\nimport styles from './Friends.module.css'\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\nimport Friends from './Friends'\nimport { compose } from 'redux'\nimport connect from \"react-redux/lib/connect/connect\";\nimport withRouter from \"react-router-dom/withRouter\"\n\nimport { \n    getFriendsPage, \n    resetFriendsPageAction,\n    sendInvitation,\n    cancelInvitation, \n    acceptInvitation,\n    rejectInvitation,\n    removeFriend,\n    fetchMoreFriends,\n    fetchMoreInvitations\n} from '../../redux/friends-reducer'\nimport Friend from './Friend/Friend'\nimport Invitation from './Invitation/Invitation'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass FriendsContainer extends React.Component {\n    state = {\n        friendsPagination: 1,\n        invitationsPagination: 1,\n        hasMoreFriends: true,\n        hasMoreInvitations: true,\n        userId: this.props.match.params.userId\n    }\n    \n    componentDidMount(){\n        let userId = this.props.match.params.userId;\n        if(!this.props.match.params.userId) { \n            userId = this.props.authData.id\n         }\n        this.props.getFriendsPage(userId, this.props.friendsPagination, this.props.invitationsPagination)\n        this.setState({\n            userId: userId\n        })\n        \n    }\n    componentWillUnmount() {\n        this.props.resetFriendsPageAction();\n    }\n    sendInvitation = (userId) => {\n        this.props.sendInvitation(userId);\n    }\n    cancelInvitation = (userId) => {\n        this.props.cancelInvitation(userId);\n    }\n    acceptRequest = (userId) => {\n        this.props.acceptInvitation(userId);\n    }\n    rejectRequest = (userId) => {\n        this.props.rejectInvitation(userId);\n    }\n    removeFriend = (userId) => {\n        this.props.removeFriend(userId);\n    }\n    fetchMoreFriends = () => {\n        if(this.props.friendsPage.friends.length >= this.props.friendsPage.totalFriends) {\n            this.setState({ hasMoreFriends: false });\n            return;\n        }\n        setTimeout(() => {\n            this.setState({\n                friendsPagination: this.state.friendsPagination+=1\n            })\n            this.props.fetchMoreFriends(this.state.userId, this.state.friendsPagination);\n        }, 1000)\n    }\n    fetchMoreInvitations = () => {\n        if(this.props.friendsPage.invitations.length >= this.props.friendsPage.totalInvitations) {\n            this.setState({ hasMoreInvitations: false });\n            return;\n        }\n        setTimeout(() => {\n            this.setState({\n                invitationsPagination: this.state.invitationsPagination+=1\n            })\n            this.props.fetchMoreInvitations(this.state.invitationsPagination);\n        }, 1000)\n    }\n    render() {\n        let friends = this.props.friendsPage.friends\n            .map(f => {\n                if(f.id == this.props.authData.id) { return false } //change\n                return (\n                    <Friend \n                        fullname={f.fullname}\n                        key = {f.id}\n                        id = {f.id}\n                        age={f.age} city={f.city}\n                        image={f.profile_image}\n                        friendshipStatus = {f.friendshipStatus}\n                        sendInvitation={this.sendInvitation}\n                        cancelInvitation={this.cancelInvitation}\n                        removeFriend={this.removeFriend}\n                        profilePageId={this.props.match.params.userId}\n                        authData={this.props.authData}\n                    />\n                )\n            })\n\n        let invitations = this.props.friendsPage.invitations\n            .map(i => <Invitation\n                firstname={i.first_name}\n                fullname={i.fullname}\n                key = {i.id}\n                id = {i.id}\n                age={i.age} city={i.city}\n                image={i.profile_image}\n                friendshipStatus = {i.friendshipStatus}\n                acceptRequest={this.acceptRequest}\n                rejectRequest={this.rejectRequest}\n                />)\n            \n        return(\n            <div>\n                {this.props.pageFetching ? \n                    <div className={styles.fetchProgress}><CircularProgress size={80}/></div>\n                    :\n                    <Friends \n                        {...this.props} \n                        friends={friends} \n                        invitations={invitations} \n                        profilePageId={this.props.match.params.userId}\n                        fetchMoreFriends={this.fetchMoreFriends}\n                        fetchMoreInvitations={this.fetchMoreInvitations}\n                        hasMoreFriends={this.state.hasMoreFriends}\n                        hasMoreInvitations={this.state.hasMoreInvitations}\n                        />}\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        userInfo: state.friendsPage.userInfo,\n        authData: state.auth,\n        friendsPage: state.friendsPage,\n        pageFetching: state.friendsPage.pageFetching,\n        friendsPagination: state.friendsPage.friendsPagination,\n        invitationsPagination: state.friendsPage.invitationsPagination\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    withRouter,\n    connect(mapStateToProps, { \n        getFriendsPage, \n        resetFriendsPageAction,\n        sendInvitation,\n        cancelInvitation,\n        acceptInvitation,\n        rejectInvitation,\n        removeFriend,\n        fetchMoreFriends,\n        fetchMoreInvitations\n     })\n)(FriendsContainer)","import React from 'react';\nimport styles from './Settings.module.css'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst Settings = (props) => {\n    const [state, setState] = React.useState({\n        checkedB: props.settings.tfa,\n      });\n\n    const toggleTfaSetting = (event) => {\n        let settings = {\n            tfa: event.target.checked\n        }\n        props.updateSettings(settings);\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    let statusIcon = <ExitToAppIcon/>;\n    if(props.authData.signOutInProcess){\n        statusIcon = <div className={styles.progress}><CircularProgress size={20}/></div>\n    }\n    return (\n        <div>\n            <div className={styles.otherWrapper}>\n                <div className={styles.tfaField}>\n                    <div className={styles.tfaRow}>\n                        <h5>Two-Factor-Authentication</h5>\n                        <FormGroup row className={styles.tfaSwitch}>\n                            <FormControlLabel\n                                control={\n                                <Switch\n                                    checked={state.checkedB}\n                                    onChange={toggleTfaSetting}\n                                    name=\"checkedB\"\n                                    color=\"primary\"\n                                />\n                                }\n                            />\n                        </FormGroup>\n                    </div>\n                    <div className={styles.signOutButton} onClick={props.userLogout}>\n                        <span>SIGN OUT</span>\n                        <span className={styles.signOutIcon}>{statusIcon}</span>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Settings;","import React from 'react'\nimport Settings from './Settings'\nimport connect from \"react-redux/lib/connect/connect\";\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/AuthRedirect'\nimport withRouter from \"react-router-dom/withRouter\"\nimport { userLogout, updateSettings } from '../../redux/auth-reducer'\n\nclass SettingsContainer extends React.Component {\n    signOut = () => {\n        this.props.userLogout()\n    }\n    updateSettings = (settings) => {\n        this.props.updateSettings(settings);\n    }\n    render() {\n        return(\n            <Settings {...this.props} userLogout={this.props.userLogout}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authData: state.auth,\n        settings: state.auth.settings\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps,{ userLogout, updateSettings }),\n    withAuthRedirect,\n    withRouter\n)(SettingsContainer)","import React from 'react'\nimport styles from './Dialog.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst Dialog = (props) => {\n    return (\n        <div>\n            <div className={styles.dialog + ' ' + styles.active}>\n                <NavLink to={'/dialogs/' + props.receiveId }>\n                    <div className={styles.profile_info}><img src={props.profile_image} alt=\"\"/>\n                    <span className={styles.profile_name}>{props.name}</span>\n                    <span className={styles.profile_message}>3 new messages</span></div></NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialog;","import React from 'react'\nimport styles from './Contact.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst Contact = (props) => {\n    return (\n        <div>\n            <div className={styles.dialog + ' ' + styles.active}>\n                <NavLink to={'/dialogs/' + props.receiveId }>\n                    <div className={styles.contact_wrapper}>\n                        <img className={styles.profile_image} src={props.profile_image} alt=\"\"/>\n                        <div className={styles.profile_info}>\n                        <span className={styles.profile_name}>{props.fullname}</span>\n                    </div>\n                    </div></NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default Contact;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport styles from './DialogsSearchField.module.css'\n\n\nconst DialogsSearchField = (props) => {\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.field}>\n            <Grid container spacing={1} alignItems=\"flex-end\">\n            <Grid item>\n                <SearchIcon />\n            </Grid>\n            <Grid item>\n                <TextField size='medium' id=\"input-with-icon-grid\" label=\"Search in messages...\" />\n            </Grid>\n            </Grid></div>\n        </div>\n    )\n}\n\nexport default DialogsSearchField;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport styles from './Dialogs.module.css'\nimport Dialog from './Dialog/Dialog'\nimport Contact from './Contact/Contact'\nimport DialogsSearchField from './DialogsSearchField/DialogsSearchField'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport { Redirect } from 'react-router-dom'\nimport { NavLink } from 'react-router-dom'\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      width: 500,\n    },\n  }));\n\nconst Dialogs = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    let dialogsElements = props.dialogsData.map(d => <Dialog key = {d.id} receiveId = {d.id} name={d.first_name} profile_image={d.profile_image}/>) // temporary\n    let contactsElements = props.contactsData.map(f => <Contact key = {f.id} receiveId = {f.id} name={f.first_name} fullname={f.fullname} profile_image={f.profile_image}/>)\n    return (\n        <div>\n            <div className={styles.selectTab}>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\">\n                    <Tab icon={<QuestionAnswerIcon/>} label=\"Recent Dialogs\" {...a11yProps(0)}/>\n                    <Tab icon={<RecentActorsIcon/>} label=\"Contacts\" {...a11yProps(1)} />\n                    </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}>\n                    <TabPanel value={value} index={0} dir={theme.direction}>\n                        <div className={styles.tabContentWrap}>\n                        { dialogsElements.length != 0 ?\n                              <div>\n                                <div><DialogsSearchField/></div>\n                                <hr/>\n                                <div className={styles.dialogsItems}>\n                                    {props.dialogsIsFetching ? \n                                      <div className={styles.progress}><CircularProgress /></div> \n                                      : \n                                      <InfiniteScroll\n                                          dataLength={dialogsElements.length}\n                                          next={props.fetchMoreDialogs}\n                                          style={{ overflow:'auto' }}\n                                          hasMore={ dialogsElements.length == props.dialogsCount ? false : props.hasMoreDialogs }\n                                          loader={<div className={styles.fetchMoreProgress}><CircularProgress/></div>}>\n                                        <div>{dialogsElements}</div>      \n                                      </InfiniteScroll>\n                                      }\n                                </div>\n                              </div>\n                              :\n                              <div className={styles.emptyListBlock}>\n                                <label>No dialogs here</label>\n                              </div>\n                          }\n                        </div>\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction}>\n                        <div className={styles.tabContentWrap}>\n                            { contactsElements.length != 0 ?\n                              <div className={styles.contactsItems}>\n                                {props.dialogsIsFetching ? \n                                <div className={styles.progress}><CircularProgress /></div> \n                                :\n                                <InfiniteScroll\n                                    dataLength={contactsElements.length}\n                                    next={props.fetchMoreContacts}\n                                    style={{ overflow:'auto' }}\n                                    hasMore={ contactsElements.length == props.contactsCount ? false : props.hasMoreContacts }\n                                    loader={<div className={styles.fetchMoreProgress}><CircularProgress/></div>}>\n                                  <div>{contactsElements}</div>      \n                                  </InfiniteScroll>\n                                }\n                              </div>\n                              :\n                              <div className={styles.emptyListBlock}>\n                                <label>Your contacts list is empty</label>\n                              </div>\n                            }\n                            \n                        </div>\n                    </TabPanel>\n                </SwipeableViews>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;\n","import React from 'react';\nimport styles from './Dialogs.module.css'\nimport Dialogs from './Dialogs'\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\nimport { compose } from 'redux';\nimport connect from \"react-redux/lib/connect/connect\";\nimport { getProfileDialogs, getProfileContacts, fetchMoreDialogs, fetchMoreContacts } from '../../redux/dialogs-reducer';\n\nclass DialogsContainer extends React.Component {\n    state = {\n        dialogsPagination: 1,\n        contactsPagination: 1,\n        hasMoreDialogs: true,\n        hasMoreContacts: true,\n    }\n    componentDidMount() {\n        this.props.getProfileDialogs(this.state.dialogsPagination);\n        this.props.getProfileContacts(this.props.userId, this.state.contactsPagination); // infinite scroll needed\n    }\n    fetchMoreDialogs = () => {\n        if(this.props.dialogsData.length >= this.props.dialogsCount) {\n            this.setState({ hasMoreDialogs: false });\n            return;\n        }\n        setTimeout(() => {\n            this.setState({\n                dialogsPagination: this.state.dialogsPagination+=1\n            })\n            this.props.fetchMoreDialogs(this.state.dialogsPagination);\n        }, 1000)\n    }\n    fetchMoreContacts = () => {\n        if(this.props.contactsData.length >= this.props.contactsCount) {\n            this.setState({ hasMoreContacts: false });\n            return;\n        }\n        setTimeout(() => {\n            this.setState({\n                contactsPagination: this.state.contactsPagination+=1\n            })\n            this.props.getProfileContacts(this.props.userId, this.state.contactsPagination);\n        }, 1000)\n    }\n    render() {\n        return(\n            <Dialogs \n                {...this.props}\n                fetchMoreDialogs={this.fetchMoreDialogs}\n                fetchMoreContacts={this.fetchMoreContacts}\n                hasMoreDialogs={this.state.hasMoreDialogs}\n                hasMoreContacts={this.state.hasMoreContacts}\n                dialogsCount={this.props.dialogsCount}\n                contactsCount={this.props.contactsCount}\n            />\n        )\n    }\n}\nlet mapStateToProps = (state) => {\n    return {\n        userId: state.auth.id,\n        dialogsData: state.dialogsPage.dialogsData,\n        contactsData: state.dialogsPage.contactsData,\n        dialogsCount: state.dialogsPage.dialogsCount,\n        contactsCount: state.dialogsPage.totalContacts,\n        dialogsIsFetching: state.dialogsPage.dialogsIsFetching\n    }\n}\nexport default compose(\n    withAuthRedirect,\n    connect(mapStateToProps, { \n        getProfileDialogs, \n        getProfileContacts, \n        fetchMoreDialogs,\n        fetchMoreContacts\n     })\n)(DialogsContainer);\n","import React from 'react'\nimport styles from './User.module.css'\nimport {Button} from \"react-bootstrap\";\nimport {faUndo, faUserFriends, faUserPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {NavLink} from \"react-router-dom\";\n\nconst User = (props) => {\n    let sendInvitation = (userId) => {\n        props.sendInvitation(userId);\n    }\n    let cancelInvitation = (userId) => {\n        props.cancelInvitation(userId);\n    }\n    return (\n            <div className={styles.profile_block}>\n                <div className={styles.profile_image}><img src={props.image} /></div>\n                <NavLink to={ \"/profile/\" + props.id }><span className={styles.profile_name}><b>{props.username}</b></span></NavLink>\n                <span>{props.age} years, {props.city}</span>\n                <div className={styles.status}>\n                    {props.friendshipStatus === 1 ? <div><span className={styles.inventation_status}>{\"Friend invitation sent\"}</span><Button onClick={()=> { cancelInvitation(props.id) }} className={styles.undo_btn} size=\"sm\" variant=\"danger\">cancel <FontAwesomeIcon className={styles.friend_icon} icon={faUndo}/></Button>{' '}</div> :\n                        props.friendshipStatus === 2 ? <span className={styles.friend_status}><b>{\"You are friends\"}</b><FontAwesomeIcon className={styles.friend_icon} icon={faUserFriends}/></span>\n                            : <Button onClick={()=> { sendInvitation(props.id) }} className={styles.add_btn} variant=\"outline-success\">Add friend <span className={styles.vl}></span>\n                                <FontAwesomeIcon icon={faUserPlus}/></Button> }\n                </div>\n\n            </div>\n\n\n    );\n}\n\nexport default User;","import React from 'react'\nimport styles from './Users.module.css'\nimport {Button, Col, Form, FormControl, InputGroup, Row} from \"react-bootstrap\";\nimport {faFilter} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport loader from \"../../assets/images/loader.gif\"\n\nconst Users = (props) => {\n\n\n    let searchFieldValue = React.createRef();\n    let pagesCount = Math.ceil(props.filteredUsersCount / props.pageSize);\n    let pages = [];\n\n    for(let i=1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.search_block}>\n                <div className=\"row justify-content-center\">\n                    <Form>\n                        <Form.Row className=\"align-items-center\">\n                            <Col sm={7} className=\"my-1\" className={styles.search_form}>\n                                <Form.Control ref = { searchFieldValue } id=\"inlineFormInputName\" placeholder=\"Search friends\" />\n                            </Col>\n                            <Col xs=\"auto\" className=\"my-1\">\n                                <div className={styles.filter_icon}><FontAwesomeIcon icon={faFilter} /></div>\n                            </Col>\n                            <Col xs=\"auto\" className=\"my-1\">\n                                <Button onClick={() => {\n                                    props.onSearchClick(searchFieldValue.current.value)}} className={styles.search_btn}>Search</Button>\n                            </Col>\n                        </Form.Row>\n                    </Form>\n            </div>\n            {props.isFetching && props.filter ? <img className={styles.loader} src={loader} alt=\"\"/> : null}                         \n            <hr/>\n            <div className={styles.profile_wrapper}>\n                { props.usersElements.length === 0  ? <div className={styles.not_found}>Users not found</div>\n                : props.searchInput == \"\" ? props.usersElements : props.filteredElements.length == 0 ? \n                <div className={styles.not_found}>Users not found</div> : props.filteredElements}\n                \n            </div>\n            {props.filter ? \n                    <div>\n                    { pages.map(p => {\n                        return <span onClick = { () => {props.onPageChanged(p)} } className={props.currentPage === p && styles.selectedPage}>{p}</span>\n                    }) }\n                </div> : !props.isFetching ? <Button onClick = { () => {props.onShowMore(props.showMorePagination)} } variant=\"primary\" size=\"lg\" className={styles.showMoreBtn}>Show more</Button> : <img className={styles.loader} src={loader} alt=\"\"/>\n            }\n            \n        </div>\n        </div>\n\n\n    );\n}\n\nexport default Users;","import React from 'react';\nimport { //Action Creators\n    getUsers,\n    getUsersBySearchQuery,\n    getMoreUsers,\n    resetPage,\n    sendInvitation,\n    cancelInvitation\n} from \"../../redux/users-reducer\";\nimport connect from \"react-redux/lib/connect/connect\";\nimport User from \"./User/User\";\nimport Users from './Users';\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\nimport { compose } from 'redux';\n\n\nclass UsersContainer extends React.Component {\n    \n\n    componentDidMount() {\n        this.props.getUsers(this.props.showMorePagination); \n    }\n    componentWillUnmount() {\n        this.props.resetPage(); // reflesh\n    }\n\n    onSearchClick = (query) => {\n        this.props.getUsersBySearchQuery(query, this.props.currentPage);\n    }\n    onPageChanged = (p) => {\n        this.props.setCurrentPage(p);\n        this.props.getUsers(p); // redux-thunk\n    }\n    onShowMore = (pagination) => {\n        pagination+=1;\n        this.props.getMoreUsers(pagination)\n    }\n    sendInvitation = (userId) => {\n        this.props.sendInvitation(userId);\n    }\n    cancelInvitation = (userId) => {\n        this.props.cancelInvitation(userId);\n    }\n\n    render() {\n    let usersElements = this.props.users\n        .map(u => \n            {\n                if(u.id == this.props.authId) return false\n                return(\n                    <User\n                        sendInvitation={this.sendInvitation}\n                        cancelInvitation={this.cancelInvitation}\n                        key = {u.id}\n                        id = {u.id}\n                        username = {u.fullname}\n                        age={u.age} city={u.city}\n                        image={u.profile_image}\n                        friendshipStatus ={u.friendshipStatus}\n                    />\n                )\n            }\n            )\n\n    let filteredElements = this.props.filteredUsers\n        .map(u => {\n            if(u.id == this.props.authId) return false\n            return (\n                <User\n                sendInvitation={this.sendInvitation}\n                cancelInvitation={this.cancelInvitation}\n                key = {u.id}\n                id = {u.id}\n                username = {u.fullname}\n                age={u.age} city={u.city}\n                image={u.profile_image}\n                friendshipStatus ={u.friendshipStatus}/>\n                    )\n                }\n            )\n        return <>\n        <Users \n            onShowMore={this.onShowMore}\n            onPageChanged={this.onPageChanged}\n            onSearchClick={this.onSearchClick}\n            filteredElements={filteredElements}\n            usersElements={usersElements}\n            isFetching={this.props.isFetching}\n            filteredUsers={this.props.filteredUsers}\n            currentPage={this.props.currentPage}\n            pageSize = {this.props.pageSize}\n            showMorePagination={this.props.showMorePagination}\n            searchInput={this.props.searchInput}\n            filter={this.props.filter}\n            filteredUsersCount={this.props.filteredUsersCount}\n        />\n        </>\n\n    }\n\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        authId: state.auth.id,\n        profileInfo: state.auth,\n        users: state.usersPage.users,\n        filteredUsers: state.usersPage.filteredUsers,\n        filter: state.usersPage.filter,\n        searchInput: state.usersPage.searchInput,\n        pageSize: state.usersPage.pageSize,\n        isFetching: state.usersPage.isFetching,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        filteredUsersCount: state.usersPage.filteredUsersCount,\n        currentPage: state.usersPage.currentPage,\n        showMorePagination: state.usersPage.showMorePagination,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        getUsers, getUsersBySearchQuery, getMoreUsers,\n        sendInvitation, cancelInvitation, resetPage\n    }),\n    withAuthRedirect\n\n)(UsersContainer)\n\n","import React from 'react';\nimport {faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { Form } from \"react-bootstrap\";\nimport styles from './ProfileStatus.module.css';\n\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    \n    toggleEditMode = () => {\n        if(this.state.editMode) {\n            this.setState({\n                editMode: false\n            })\n            \n            this.props.updateProfileStatus(this.state.status)\n        } else {\n            this.setState({\n                editMode: true\n            })\n        }\n    }\n\n    onStatusChange = (e) => {\n        let value = e.currentTarget.value;\n        this.setState({\n            status: value\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                { this.props.isAuthUserPage ?\n                    <div>\n                        {this.state.editMode ?\n                        <div><Form.Control autoFocus onChange={this.onStatusChange} onBlur={this.toggleEditMode} value={this.state.status} className={styles.status_input} /></div> : \n                        this.state.status ?\n                            <div onClick = { this.toggleEditMode } className={styles.user_status}>\n                            <span>{this.state.status}</span>\n                            <FontAwesomeIcon className={styles.pencil_icon} icon={faPencilAlt}/></div> :\n                            <span onClick = { this.toggleEditMode } className={styles.no_status}>change status</span>}\n                    </div>\n                    :\n                    <div>\n                        <div className={styles.user_status} style={{ cursor:'text' }}>\n                            <span>{this.state.status}</span>\n                        </div>\n                    </div>\n                }\n            </div>\n                \n        );\n    }\n}\n\n\nexport default ProfileStatus;","import React from 'react';\nimport {Button, Image} from 'react-bootstrap'\nimport MaterialButton from '@material-ui/core/Button'\nimport styles from './ProfileDescription.module.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { FiCrop } from 'react-icons/fi';\nimport { faImages } from '@fortawesome/free-solid-svg-icons';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 'max-content',\n    },\n    input: {\n        display: 'none',\n      },\n    icon: {\n        marginLeft: '8px'\n    },\n    btn: {\n        marginTop: '5px'\n    },\n    \n    orig_img_container: {\n        position: 'relative',\n        width: 'auto',\n        height: 'auto',\n        maxWidth: '550px',\n        maxHeight: '450px',\n        marginBottom: '30px',\n        overflowX: 'auto',\n        overflowY: 'auto'\n    },\n    orig_img: {\n        width: '100%',\n        height: 'auto'\n    },\n    presentImage: {\n        width: '200px',\n        \n    },\n    presentBlock: {\n        padding: '10px'\n    },\n    cropBlock: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 'max-content',\n        marginLeft: '7%'\n    },\n    save_btn: {\n        marginLeft: '10px'\n    },\n    crop_icon: {\n        marginLeft: '5px'\n    }\n  }));\n\n\n\nconst ProfilePhotoCropper = (props) => {\n    const classes = useStyles();\n    const [image, setImage] = React.useState(null);\n    const [crop, setCrop] = React.useState({ aspect: 1 / 1, width: 200 });\n    const [result, setResult] = React.useState(null);\n\n    const handleClose = () => {\n        props.setOpen(false);\n        props.selectFile(null);\n    };\n\n    const getCroppedImg = () => {\n        const canvas = document.createElement('canvas');\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext('2d');\n    \n        ctx.drawImage(\n            image,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width,\n            crop.height,\n        );\n        return new Promise((resolve, reject) => {\n            canvas.toBlob(blob => {\n              resolve(setResult(blob));\n            }, 'image/jpeg', 1);\n          });\n        \n    }\n\n    const uploadImage = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('uploaded_pic', result, 'profilePic');\n        props.updateProfilePicture(formData);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={true}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                timeout: 500,\n                }}>\n                <Fade in={true}>\n                <form onSubmit={uploadImage}>\n                    <div className={classes.paper}>\n                        <div className={classes.content}>\n                                <div>\n                                    <div className={classes.orig_img_container}>\n                                        <ReactCrop className={classes.orig_img} keepSelection={true} minWidth={50} maxWidth={500} circularCrop={true} src={props.file} onImageLoaded={setImage} crop={crop} onChange={setCrop}/>\n                                    </div>\n                                    <MaterialButton onClick={getCroppedImg} variant=\"contained\" size=\"large\" color=\"primary\" className={classes.margin}>CROP <FiCrop className={classes.crop_icon}/></MaterialButton>\n                                </div>\n                                    <div>\n                                        { result &&\n                                        <div className={classes.cropBlock}>\n                                            <label>Your profile picture will look like this:</label><br/>\n                                            <div className={classes.presentBlock}>\n                                                <Image className={classes.presentImage} src={URL.createObjectURL(result)} roundedCircle/>\n                                            </div>\n                                            <div className={styles.cropModalButtons}>\n                                                <MaterialButton onClick={handleClose} variant=\"contained\" size=\"large\">CANCEL</MaterialButton>\n                                                <MaterialButton type='submit' variant=\"contained\" size=\"large\" color=\"primary\" className={classes.save_btn}>SAVE</MaterialButton>\n                                            </div>\n                                    </div>\n                                    }\n                            </div>\n                    </div>\n                    </div>\n                    </form>\n                </Fade>\n                \n            </Modal>\n        </div>\n    )\n}\n\nconst ProfilePhotoUploadModal = (props) => {\n    const classes = useStyles();\n    \n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={props.open}\n                onClose={props.handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                timeout: 500,\n                }}>\n                <Fade in={props.open}>\n                    <div className={classes.paper}>\n                        \n                        <div className={classes.btn}>\n                            <input\n                                accept=\"image/*\"\n                                className={classes.input}\n                                id=\"contained-button-file\"\n                                multiple\n                                type=\"file\"\n                                name=\"uploaded_profile_picture\"\n                                onChange={props.handleFileChange}\n                            />\n                            <label htmlFor=\"contained-button-file\">\n                                <h3>User Profile Image</h3>\n                                <span>Please choose the photo you want to set as profile picture.</span><br/><br/>\n                                <center>\n                                    <MaterialButton variant=\"contained\" color=\"primary\" component=\"span\">\n                                    UPLOAD PHOTO <PhotoCamera className={classes.icon}/>\n                                </MaterialButton></center>\n                            </label>\n                        </div>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    )\n}\n\nconst ProfilePhotoModal = (props) => {\n    const [file, selectFile] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n      };\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleFileChange = (e) => {\n        selectFile(URL.createObjectURL(e.target.files[0]));\n    }\n\n    return (\n        <div>\n            <Button  onClick={handleOpen} className={styles.change_photo_btn} variant=\"light\">Change profile photo</Button>\n            { !file ? \n                <ProfilePhotoUploadModal open={open} handleClose={handleClose} handleFileChange={handleFileChange}/> \n                : \n                <ProfilePhotoCropper updateProfilePicture={props.updateProfilePicture} selectFile={selectFile} file={file} setOpen={setOpen}/> }\n        </div>\n    )\n}\nexport default ProfilePhotoModal;","import React from 'react';\nimport {Col, Container, Image, Row} from \"react-bootstrap\";\nimport styles from './ProfileDescription.module.css';\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\nimport MaterialButton from '@material-ui/core/Button'\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai'\nimport { BiConversation } from 'react-icons/bi'\nimport { FiUsers } from 'react-icons/fi'\nimport { RiMailSendLine } from 'react-icons/ri'\nimport { NavLink } from 'react-router-dom'\nimport ProfilePhotoModal from './ProfilePhotoModal'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PicLoader from '../../../../assets/images/loader2.gif'\n\nconst ProfileDescription = (props) => {\n\n    const sendInvitation = (userId) => {\n        props.sendInvitation(userId);\n    }\n    return (\n        <div className={styles.component_wrapper}>\n            <div className={styles.headerPhoto}>\n                <img src={props.userInfo.header_image}></img>\n            </div>\n            <div className={styles.descriptionBlock}>\n                <div>\n                    <Container>\n                        <Row>\n                            <Col xs={6} md={4} className={styles.user_image_block}>\n                                { props.pictureUploadProcess ? <img className={styles.pictureLoader} src={PicLoader}/>: <Image className={styles.user_image} src={props.userInfo.profile_image + '?' + new Date()} roundedCircle/> }\n                                { props.isAuthUserPage ? \n                                    <ProfilePhotoModal updateProfilePicture={props.updateProfilePicture}/>\n                                :\n                                    <div>\n                                        <NavLink to={'/dialogs/' + props.userInfo.id}><MaterialButton variant=\"contained\" size=\"default\" ><BiConversation className={styles.userActionsIcon}/>Start dialog with {props.userInfo.first_name}</MaterialButton></NavLink>\n                                        <div>\n                                            {\n                                                props.friendshipStatus === 0 ?\n                                                    <MaterialButton onClick={() => { sendInvitation(props.userInfo.id) }} variant=\"contained\" size=\"default\" color=\"primary\"><AiOutlineUsergroupAdd className={styles.userActionsIcon}/>Send friend invitation</MaterialButton>\n                                                : null ||\n                                                props.friendshipStatus === 1 ? \n                                                    <MaterialButton disabled size=\"default\" color=\"primary\">\n                                                        <RiMailSendLine className={styles.userActionsIcon}/>Friend invitation sent</MaterialButton>\n                                                : null ||\n                                                props.friendshipStatus === 2 ?\n                                                    <MaterialButton style={{ cursor: 'default', backgroundColor: 'transparent' }} disableRipple size=\"default\" color=\"primary\">\n                                                        <FiUsers className={styles.userActionsIcon}/>{props.userInfo.first_name} is your friend</MaterialButton> : null\n                                            }\n                                        </div>\n                                    </div>\n                                }\n                            </Col>\n                            <Col>\n                                <div className={styles.user_description}>\n                                    <div><span\n                                        className={styles.user_name}>{props.userInfo.fullname}</span>\n                                    </div>\n                                    <ProfileStatus isAuthUserPage={props.isAuthUserPage} updateProfileStatus={props.updateProfileStatus} status={props.userInfo.status}/>\n                                    <br/><br/>\n                                    <span><b>User Information</b></span>\n                                    <hr className=\"my-1\"/>\n                                    <div>\n                                        <span>From: {props.userInfo.country}, {props.userInfo.city}</span><br/>\n                                        <span>Age: {props.userInfo.age}</span><br/>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                        </Container>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileDescription;","import React from 'react';\nimport {Card, Col, Container, Row} from \"react-bootstrap\";\nimport styles from './ProfileHub.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport PeopleIcon from '@material-ui/icons/People';\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\nimport { IoIosPeople } from 'react-icons/io'\nimport { AiOutlineSetting } from 'react-icons/ai'\nimport { RiEmotionSadLine } from 'react-icons/ri'\n\nconst ProfileHub = (props) => {\n    let friendsList =\n        props.userFriends.map(f =><div>\n            <NavLink to={ \"/profile/\" + f.id}><img className={styles.friend_user_image} src={f.profile_image} alt=\"\"/>\n            <span className={styles.friendName}>{f.first_name}</span></NavLink>\n        </div>\n           )\n    return (\n        <div>\n            <Container>\n                <hr className=\"my-4\"/>\n                <Row>\n                {/* <Col xs={6} md={4}>\n                        <Card className={styles.cardElement} border=\"light\" style={{width: '20rem'}}>\n                            <Card.Header>\n                            <div className={styles.hubTitle}><span className={styles.hubIcon}><PermMediaIcon style={{fontSize: '30px'}}/></span>\n                                {props.isAuthUserPage ? <span>My social media</span> : <span>{props.userInfo.first_name}'s social media</span>}\n                            </div>\n                                <a className={styles.showAll} href=''>Show all</a>\n                            </Card.Header>\n                            <Card.Body className={styles.comingBlock}>\n                                <label><AiOutlineSetting className={styles.settingIcon}/></label>\n                                <label>Social media coming soon</label>\n                            </Card.Body>\n                        </Card>\n                    </Col>*/}\n                    <Col xs={6} md={4}>\n                        <Card className={styles.cardElement} border=\"light\" style={{width: '20rem'}}>\n                        <Card.Header>\n                            <div className={styles.hubTitle}><span className={styles.hubIcon}><PeopleIcon style={{fontSize: '30px'}}/></span>\n                                {props.isAuthUserPage ? <span>My friends</span> : <span>{props.userInfo.first_name}'s friends</span>}\n                            </div>\n                                <NavLink className={styles.showAll} to={ \"/friends/\" + props.userInfo.id }><span  href=''>Show all</span></NavLink>\n                            </Card.Header>\n                            { friendsList.length != 0 ?\n                                <Card.Body className={styles.user_friends}>\n                                    { friendsList }\n                                </Card.Body>\n                                :\n                                <Card.Body className={styles.emptyBlock}>\n                                    <label><RiEmotionSadLine className={styles.sadIcon}/></label>\n                                    <div>\n                                        { props.isAuthUserPage ?\n                                            <label>Your friends list is empty</label>\n                                            :\n                                            <label>{props.userInfo.first_name}'s friends list is empty</label>\n                                        }\n                                    </div>\n                                </Card.Body>\n                            }\n                        </Card>\n                    </Col>\n                    {/*\n                    <Col xs={6} md={4}>\n                        <Card className={styles.cardElement} border=\"light\" style={{width: '20rem'}}>\n                        <Card.Header>\n                            <div className={styles.hubTitle}><span className={styles.hubIcon}><IoIosPeople style={{fontSize: '30px'}}/></span>\n                                {props.isAuthUserPage ? <span>My communities</span> : <span>{props.userInfo.first_name}'s communities</span>}\n                            </div>\n                                <a className={styles.showAll} href=''>Show all</a>\n                            </Card.Header>\n                            <Card.Body className={styles.comingBlock}>\n                                <label><AiOutlineSetting className={styles.settingIcon}/></label>\n                                <label>Communities coming soon</label>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    */}\n                </Row>\n            </Container>\n            <br/>\n            <hr className=\"my-1\"/>\n        </div>\n    );\n}\n\nexport default ProfileHub;","import React from 'react';\nimport ProfileDescription from \"./ProfileDescription/ProfileDescription\"\nimport ProfileHub from \"./ProfileHub/ProfileHub\"\n\n\n\nconst ProfileInfo = (props) => {\n    return (\n        <div>\n            <ProfileDescription {...props}/>\n            <ProfileHub {...props}/>\n        </div>\n    );\n}\n\nexport default ProfileInfo;","export const required = value => {\n    if(!value) return 'This field cannot be empty'\n    else {\n        if(value.trim().length !==0) return undefined;\n        return 'This field cannot be empty'\n    }\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if(value.length > maxLength) {\n        return `Max length of post is ${maxLength} symbols!`\n    }\n    return undefined;\n}\n","import React from \"react\";\nimport styles from './ReduxFormControls.module.css'\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { Form } from 'react-bootstrap'\n\nconst ReduxFormControl = ({input, meta, child, ...props}) => {\n    let hasError = meta.touched && meta.error;\n    return <div className={styles.postForm + \" \" + (hasError ? styles.error : \"\")}>\n            <div> {props.children} </div>\n            { hasError && <span><ErrorIcon/> { meta.error }</span> }\n        </div>  \n};\n\nexport const ReduxTextArea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <ReduxFormControl {...props}><Form.Control as={'textarea'} {...restProps} {...input} /></ReduxFormControl>\n}","import React, { useState } from 'react';\nimport styles from './Post.module.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faHeart, faShare} from \"@fortawesome/free-solid-svg-icons\";\nimport {Alert} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {faCommentAlt} from \"@fortawesome/free-regular-svg-icons\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Box from '@material-ui/core/Box';\nimport {Button, Form } from \"react-bootstrap\";\nimport { Field, reduxForm } from \"redux-form\"\nimport { required, maxLengthCreator } from \"../../../../validators/validator\"\nimport { ReduxTextArea } from '../../../FormControls/ReduxFormControls'\nimport { connect } from 'react-redux'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { TiPencil, TiTrash } from 'react-icons/ti';\n\nconst fieldMaxLength = maxLengthCreator(5000);\n\nconst compareDates = (todayDate, publishDate) => {\n    const today = new Date(todayDate);\n    const yesterday = new Date(todayDate)\n    const publish = new Date(publishDate);\n    \n    yesterday.setDate(today.getDate() - 1)\n    today.setHours(0); today.setMinutes(0); today.setSeconds(0, 0);\n    yesterday.setHours(0); yesterday.setMinutes(0); yesterday.setSeconds(0, 0);\n    publish.setHours(0); publish.setMinutes(0); publish.setSeconds(0, 0);\n    \n\n    if(publish.getTime() == today.getTime()) return 'Today'\n    if(publish.getTime() == yesterday.getTime()) return 'Yesterday'\n}\n\nconst getPublishDate = (publishDate) => {\n    let dateString;\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const todayDate = new Date();\n    let date = new Date(publishDate);\n\n    dateString = compareDates(todayDate, date);\n\n    if(!dateString) {\n        let day = date.getDate();\n        let month = monthNames[date.getMonth()];\n        let year = date.getFullYear();\n        dateString = month + ', ' + day + ', ' + year;\n    }\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0'+ minutes : minutes;\n    let timeString = 'at ' + hours + ':' + minutes + ' ' + ampm;\n    let result = dateString + ' ' + timeString\n\n    return result;\n}\n\nconst SkipDialog = (props) => {\n\n    const handleClose = () => {\n        props.setSkipDialog(false);\n    };\n\n    const handleSubmit = () => {\n        props.setSkipDialog(false);\n        props.setEditMode(false);\n    }\n    return(\n        <Dialog\n            open={props.skipDialog}\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\">\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Discard all changes?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Discard\n          </Button>\n        </DialogActions>\n        </Dialog>\n    )\n}\n\nlet PostForm = (props) => {\n    const handleClose = () => {\n        props.setEditMode(false);\n    }\n    const skipClose = (e) => {\n        if(props.editMode == true) {\n            props.setSkipDialog(true);\n            setTimeout(function() {\n                e.currentTarget.focus();\n            }, 1)\n        }\n    }\n    const handleSubmit = () => {\n        props.setEditMode(false)\n        props.handleSubmit()\n    }\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Form >\n                <Form.Group controlId=\"postForm\">\n                    <Field autoFocus onBlur={skipClose} component={ReduxTextArea} name='content' validate={[required, fieldMaxLength]}/>\n                </Form.Group>\n            </Form>\n            <Button onMouseDown={handleClose} variant=\"secondary\">Cancel</Button>\n            <Button className={styles.updatePostBtn} type='submit' onMouseDown={handleSubmit} variant=\"info\">Update Post</Button>\n        \n        </form>\n    );\n}\n\nPostForm = reduxForm({\n    form: 'editPost',\n    enableReinitialize: true\n})(PostForm);\n\nPostForm = connect(\n    state => ({\n      initialValues: state.profilePage.editedPost\n    })\n  )(PostForm)\n\n\nconst Post = (props) => {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [editMode, setEditMode] = useState(false);\n    const [skipDialog, setSkipDialog] = useState(false);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleSubmit = (formData) => {\n        setSkipDialog(false);\n        setEditMode(false);\n        props.updatePost(formData.id, formData.content)\n        props.setEditedPostAction(null);\n    }\n\n    const handleClose = (option, id, content) => {\n        if(option === 'edit' && !editMode) {\n            setEditMode(true)\n            console.log(editMode)\n            props.setEditedPostAction({ id, content });\n        }\n        if(option === 'remove') {\n            props.deletePost(id, props.authId);\n        }\n    setAnchorEl(null);\n    };\n    return (\n        <div className={styles.item}>\n            <Box boxShadow={3}>\n            <Alert key='info' variant='info'>\n                <div>\n                    { skipDialog && <SkipDialog skipDialog={skipDialog} setSkipDialog={setSkipDialog} setEditMode={setEditMode}/> }\n                    { editMode ?\n                        <div>\n                            <PostForm \n                                setEditMode={setEditMode}\n                                editMode={editMode}\n                                setEditedPost={props.setEditedPostAction}\n                                setSkipDialog={setSkipDialog}\n                                onSubmit={handleSubmit}\n                                />\n                        </div>\n                        :\n                        <div>\n                            <img src={props.userInfo.profile_image} alt=\"\"/>\n                            <span className={styles.user_name}>\n                                <NavLink to = {'/profile/' + props.userInfo.id} activeClassName={styles.activeLink}><b>{props.userInfo.fullname}</b></NavLink>{\" added a new post:\"}\n                            </span>\n                            <div className={styles.post_option}>\n                            { props.isAuthUserPage ?\n                                <div>\n                                    <IconButton\n                                        aria-label=\"more\"\n                                        aria-controls=\"long-menu\"\n                                        aria-haspopup=\"true\"\n                                        onClick={handleClick}>\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                    <Menu\n                                        id=\"long-menu\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={open}\n                                        onClose={handleClose}\n                                        PaperProps={{\n                                        style: {\n                                            width: '15ch',},}}>\n                                        \n                                        <MenuItem key='edit' onClick={() => {handleClose('edit', props.id, props.content)}}>\n                                            <span><TiPencil className={styles.postMenuIcon}/> Edit</span>\n                                        </MenuItem>\n                                        <MenuItem key='remove' onClick={() => {handleClose('remove', props.id, props.content)}}>\n                                            <span><TiTrash className={styles.postMenuIcon}/> Remove</span>\n                                        </MenuItem>\n                                        \n                                    </Menu>\n                                </div> : null\n                            }\n                            </div>\n                            <div className={styles.post_content}>{props.content}</div>\n                                <hr className=\"my-2\"/>\n                                <div>\n                                    <table>\n                                        <tr>\n                                            <td><span className={styles.like_icon}><FontAwesomeIcon icon={faHeart}/> <span>{props.likesCount}</span></span></td>\n                                            <td><span className={styles.comment_icon}><FontAwesomeIcon icon={faCommentAlt}/> <span>{props.commentsCount}</span></span></td>\n                                            <td><span className={styles.share_icon}><FontAwesomeIcon icon={faShare}/><span>{props.repostsCount}</span></span></td>\n                                            <td><span className={styles.posted_info}>{getPublishDate(props.publishDate)}</span></td>\n                                        </tr>\n\n                                    </table>\n                            </div>\n                        </div>\n                     } \n                    </div>\n            </Alert>\n            <div>\n        </div>\n        </Box></div>\n    );\n\n}\n\n\nexport default Post;","import React from 'react';\nimport styles from './Posts.module.css';\nimport Post from './Post/Post';\nimport {Button, Form } from \"react-bootstrap\";\nimport { Field, reduxForm } from \"redux-form\"\nimport { required, maxLengthCreator } from \"../../../validators/validator\"\nimport { ReduxTextArea } from '../../FormControls/ReduxFormControls'\n\nconst fieldMaxLength = maxLengthCreator(5000);\n\nconst PostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Form >\n                <Form.Group controlId=\"postForm\">\n                    <Field component={ReduxTextArea} name='post' validate={[required, fieldMaxLength]}/>\n                </Form.Group>\n            </Form>\n        <Button type='submit' variant=\"info\">Add Post</Button>\n        </form>\n    );\n}\n\nconst PostReduxForm = reduxForm({\n    form: 'post'\n})(PostForm);\n\n\nconst Posts = (props) => {\n    let postsElements =\n        props.postsData.map(p =>  <Post \n            id = {p.id} \n            key = {p.id} \n            content ={p.content} \n            likesCount = {p.likes} \n            commentsCount = {p.comments} \n            repostsCount={p.reposts}\n            publishDate={p.created_at}\n            userInfo={props.userInfo}\n            authId={props.authData.id}\n            deletePost={props.deletePost}\n            updatePost={props.updatePost}\n            setEditedPostAction={props.setEditedPostAction}\n            isAuthUserPage={props.isAuthUserPage}/>)\n    \n    let addPost = (values) => {\n        props.addPost(values.post)\n    }\n    return (\n        <div className={styles.postsBlock}>\n            { props.isAuthUserPage ? \n                <div>\n                    <PostReduxForm onSubmit={addPost}/>\n                    <div className={styles.posts}>\n                        {postsElements}\n                    </div>\n                </div>\n                :\n                <div>\n                    <div className={styles.posts}>\n                        {postsElements}\n                    </div>\n                </div>\n            }\n      </div>\n    );\n}\n\nexport default Posts;","import React from 'react';\nimport Posts from \"./Posts\";\nimport connect from \"react-redux/lib/connect/connect\";\nimport withRouter from \"react-router-dom/withRouter\"\nimport { getProfilePosts, addPost, updatePost, deletePost, setEditedPostAction } from \"../../../redux/profile-reducer\"\n\n\nclass PostsContainer extends React.Component {\n    \n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId) { \n            userId = this.props.authData.id\n         }\n        this.props.getProfilePosts(userId);\n    }\n\n    addPost = (post_content) => {\n        this.props.addPost(post_content);\n    }\n\n    updatePost = (post_content) => {\n        this.props.updatePost(post_content);\n    }\n\n    deletePost = (post_id, user_id) => {\n        this.props.deletePost(post_id, user_id);\n    }\n\n    render() {\n        return (\n            <div>\n                <Posts {...this.props} addPost={this.addPost} deletePost={this.deletePost}/>\n        </div>\n        );\n    }\n    \n}\n\nlet mapStateToProps = (state) => {\n    return {\n        userInfo: state.profilePage.userInfo,\n        postsData: state.profilePage.postsData,\n        authData: state.auth,\n    }\n}\n\nlet urlDataComponent = withRouter(PostsContainer);\n\n\nexport default connect(mapStateToProps, \n    {   getProfilePosts, addPost, updatePost, deletePost, setEditedPostAction})(urlDataComponent)\n","import React from 'react';\nimport styles from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\nimport PostsContainer from \"./Posts/PostsContainer\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CheckIcon from '@material-ui/icons/Check';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nclass Profile extends React.Component {\n    isAuthUserPage = false;\n    state = {\n        visible: true,\n    }\n    autoClose = () => {\n        this.props.resetModalMessage()\n    }\n    render() {\n        if(this.props.userInfo.id === this.props.auth.id) {\n            this.isAuthUserPage = true;\n        }\n        return (\n            <div>\n                { this.props.successfullMessage ? \n                <div>\n                    <Snackbar\n                    open={this.state.visible}\n                    onClose={this.autoClose}\n                    autoHideDuration={3000}\n                    anchorOrigin={{ horizontal: '100', vertical: '40' } }>\n                        <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"success\">\n                            {this.props.successfullMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                : null }\n    \n                { this.props.errorMessage ?\n                <div>\n                    <Snackbar\n                    open={this.state.visible}\n                    onClose={this.autoClose}\n                    autoHideDuration={3000}\n                    anchorOrigin={{ horizontal: 'top', vertical: 'center' } }>\n                        <Alert severity=\"error\">\n                            {this.props.errorMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                : null }\n                \n                <ProfileInfo\n                    {...this.props}\n                    isAuthUserPage={this.isAuthUserPage} \n                    sendInvitation={this.props.sendInvitation}\n                    friendshipStatus={this.props.friendshipStatus}\n                    pictureUploadProcess={this.props.pictureUploadProcess}\n                    />\n                <PostsContainer isAuthUserPage={this.isAuthUserPage} store={this.props.store}/>\n        </div>\n        \n        );\n    }\n    \n}\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\"\nimport styles from './Profile.module.css'\nimport connect from \"react-redux/lib/connect/connect\";\nimport withRouter from \"react-router-dom/withRouter\"\nimport { \n    getProfilePage, \n    resetProfilePageAction, \n    updateProfileStatus, \n    updateProfilePicture, \n    sendInvitation,\n    resetModalMessage\n } from \"../../redux/profile-reducer\"\nimport { toggleLogFormInProcess } from \"../../redux/auth-reducer\"\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if(!userId) { \n            userId = this.props.auth.id\n         }\n        this.props.getProfilePage(userId);\n    }\n    componentWillUnmount() {\n        this.props.resetProfilePageAction();\n    }\n\n    sendInvitation = (userId) => {\n        this.props.sendInvitation(userId);\n    }\n    \n    render() {\n        return (\n            <div>\n                { this.props.pageFetching ? \n                    <div className={styles.pageProgress}><CircularProgress size={80}/></div> \n                    : \n                    <Profile \n                        {...this.props} \n                        friendshipStatus={this.props.userInfo.friendshipStatus} \n                        sendInvitation={this.sendInvitation}/>}\n        </div>\n        );\n    }\n    \n}\nlet mapStateToProps = (state) => {\n    return {\n        userInfo: state.profilePage.userInfo,\n        auth: state.auth,\n        pageFetching: state.profilePage.pageFetching,\n        userFriends: state.profilePage.userFriends,\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText,\n        logFormInProcess: state.auth.logFormInProcess,\n        pictureUploadProcess: state.profilePage.pictureUploading,\n        successfullMessage: state.profilePage.successfullMessage,\n        errorMessage: state.profilePage.errorMessage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        toggleLogFormInProcess\n    }\n}\n    \n\nexport default compose(\n    connect(mapStateToProps, { \n        mapDispatchToProps, \n        updateProfileStatus,\n        updateProfilePicture,\n        sendInvitation,\n        getProfilePage, \n        resetProfilePageAction,\n        resetModalMessage\n     }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n","import React from 'react';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Header.module.css';\nimport logo_icon from '../../assets/images/logo.png'\n\nconst Header = (props) => {\n    return (\n        <header className = {styles.header}>\n            <img src={logo_icon}></img>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react'\nimport Header from './Header'\nimport { setUserData, authMe, userLogin, userLogout } from '../../redux/auth-reducer'\nimport connect from \"react-redux/lib/connect/connect\";\n\nclass HeaderContainer extends React.Component {\n    componentDidMount() {\n        this.props.authMe();\n    }\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        userId: state.auth.id,\n        login: state.auth.login,\n        email: state.auth.email,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect(mapStateToProps, \n    { setUserData: setUserData, authMe, userLogin, userLogout })(HeaderContainer);\n","import React from 'react'\nimport styles from './FormControls.module.css'\nimport ErrorIcon from '@material-ui/icons/Error';\n\nexport const LoginInputFormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={styles.loginFormWrapper + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                <input className={styles.loginInputField} {...input} {...props}></input>\n            </div>\n            { hasError && <span><span className={styles.loginErrorICon}><ErrorIcon/></span>{meta.error}</span> }\n        </div>\n    )\n}","import React from 'react'\nimport { verifyTwoFactorAuth } from '../../redux/auth-reducer'\nimport connect from \"react-redux/lib/connect/connect\";\nimport { Field, reduxForm } from \"redux-form\"\nimport Button from '@material-ui/core/Button';\nimport styles from './TwoFactorVerify.module.css'\nimport { Fade } from \"react-awesome-reveal\";\nimport { MdPhonelinkSetup } from 'react-icons/md'\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst RenderTextField = ({\n    label, input, meta: { touched, invalid, error }, ...custom\n}) => (\n    <TextField\n          label={label}\n          placeholder={label}\n          error={touched && invalid}\n          helperText={touched && error}\n          id=\"outlined-full-width\"\n          style={{ margin: 8 }}\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          {...input}\n          {...custom}\n    />\n)\n\nconst AuthCodeForm = (props) => {\n    return (\n        <div className={styles.page}>\n        <Fade direction='left'>\n            <form onSubmit={props.handleSubmit}>\n                <ul className={styles.wrapper}>\n                    <center>\n                        <li>\n                            <h4><MdPhonelinkSetup className={styles.phone_icon}/>Setup Two Factor Authentication</h4>\n                        </li>\n                    </center>\n                    <li className={styles.content}>\n                        <span>For your own safety, we suggest you set up two-factor authentication\n                              for your account. It is a very powerful way to defend against an intruder.\n                              Using your phone please scan the QR code below using and enter the value.\n                              You can always disable this option in the settings.\n                        </span>\n                    </li>\n                    <li className={styles.form_row}>\n                        <img src={props.qrCode} alt=\"\"/>\n                    </li>\n                    <hr/>\n                    <li className={styles.form_row}>\n                        <div className={styles.codeRow}>\n                            <Field placeholder='ENTER 6 DIGIT CODE'component={RenderTextField} name={'auth_verify_code'} type=\"text\"/>\n                            { props.logFormInProcess ?\n                                <CircularProgress className={styles.login_progress}/>\n                            :\n                            <div className={styles.submitBtn}><Button size='large' type='submit' variant=\"contained\" color=\"primary\">Submit code</Button></div>\n                            }\n                        </div>\n                    </li>\n                    \n                </ul>\n            </form>\n        </Fade>\n    </div>\n    );\n}\n\nconst AuthCodeReduxForm = reduxForm({\n    form: 'auth_verify_code'\n})(AuthCodeForm);\n\n\nclass TwoFactorVerify extends React.Component {\n    componentDidMount() {\n    }\n    verifyTwoFactorAuth = (formData) => {\n        this.props.verifyTwoFactorAuth(this.props.authId, formData.auth_verify_code)\n    }\n    render() {\n        return <div>\n            <div><AuthCodeReduxForm \n                onSubmit={this.verifyTwoFactorAuth} \n                qrCode={this.props.qrCode}\n                logFormInProcess={this.props.logFormInProcess}\n                />\n                </div>\n            </div>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authId: state.auth.auth_id,\n        logFormInProcess: state.auth.logFormInProcess\n    }\n}\n\nexport default connect(mapStateToProps, { verifyTwoFactorAuth })(TwoFactorVerify)\n\n","import React from 'react'\nimport { validateTwoFactorAuth } from '../../redux/auth-reducer'\nimport connect from \"react-redux/lib/connect/connect\";\nimport { Field, reduxForm } from \"redux-form\"\nimport Button from '@material-ui/core/Button';\nimport styles from './TwoFactorValidation.module.css'\nimport { Fade } from \"react-awesome-reveal\";\nimport tfa_image from '../../assets/images/tfa_auth.jpg'\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst validate = values => {\n    const errors = {}\n    const requiredFields = [\n      'auth_validate_code'\n    ]\n    requiredFields.forEach(field => {\n      if (!values[field]) {\n        errors[field] = 'Required'\n      }\n    })\n    if (values.auth_validate_code && values.auth_validate_code.length < 6) {\n      errors.auth_validate_code = 'The length of the code cannot be less than 6'\n    }\n    return errors\n  }\n\nconst RenderTextField = ({\n    label, input, meta: { touched, invalid, error }, ...custom\n}) => (\n    <TextField\n          label={label}\n          placeholder={label}\n          error={touched && invalid}\n          helperText={touched && error}\n          id=\"outlined-full-width\"\n          style={{ margin: 8 }}\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          {...input}\n          {...custom}\n    />\n)\n\nconst AuthCodeForm = (props) => {\n    return (\n        <div className={styles.page}>\n        <Fade direction='left'>\n            <form onSubmit={props.handleSubmit}>\n                <ul className={styles.wrapper}>\n                    <li><img className={styles.tfa_image} src={tfa_image}/></li>\n                    <center><li><h4>Two Factor Authentication</h4></li></center>\n                    <li>\n                        <p>This account is protected by two-factor authentication. \n                            Please open the Google Authentication app and enter the code in the field below.\n                        </p>\n                    </li>\n                    <li className={styles.form_row}>\n                        <div className={styles.codeRow}>\n                            <Field placeholder='ENTER 6 DIGIT CODE' component={RenderTextField} name={'auth_validate_code'} type=\"text\"/>\n                            { props.logFormInProcess ?\n                            <CircularProgress className={styles.login_progress}/>\n                            :\n                            <div className={styles.submitBtn}><Button size='large' type='submit' variant=\"contained\" color=\"primary\">Submit code</Button></div>\n                        }\n                        </div>\n                    </li>\n                    \n                </ul>\n            </form>\n        </Fade>\n    </div>\n    );\n}\n\nconst AuthCodeReduxForm = reduxForm({\n    form: 'auth_validate_code',\n    validate\n})(AuthCodeForm);\n\n\nclass TwoFactorValidation extends React.Component {\n    componentDidMount() {\n    }\n    validateTwoFactorAuth = (formData) => {\n        this.props.validateTwoFactorAuth(this.props.authId, formData.auth_validate_code)\n    }\n    render() {\n        return <div>\n            <div><AuthCodeReduxForm logFormInProcess={this.props.logFormInProcess} onSubmit={this.validateTwoFactorAuth}/></div>\n            </div>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authId: state.auth.auth_id,\n        logFormInProcess: state.auth.logFormInProcess\n    }\n}\n\nexport default connect(mapStateToProps, { validateTwoFactorAuth })(TwoFactorValidation)\n\n","import React, { useState } from 'react';\nimport { Field, reduxForm } from \"redux-form\"\nimport styles from './Login.module.css'\nimport signin_icon from '../../assets/images/signin.png'\nimport logo_icon from '../../assets/images/logo.png'\nimport { Redirect } from 'react-router-dom'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {NavLink} from \"react-router-dom\";\nimport { Fade } from \"react-awesome-reveal\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { required } from '../../validators/validator'\nimport { LoginInputFormControl } from '../FormControls/FormControls'\nimport TwoFactorVerify from '../TwoFactorAuth/TwoFactorVerify'\nimport TwoFactorValidation from '../TwoFactorAuth/TwoFactorValidation';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst LoginForm = (props) => {\n    return (\n        <div className={styles.page}>\n        <Fade direction='left'>\n            <form onSubmit = { props.handleSubmit }>\n                <ul className={styles.wrapper}>\n                    <li className={styles.form_row}>\n                        <img src={logo_icon} alt=\"\"/>\n                        </li>\n                        <hr/>\n                    <li className={styles.form_row}>\n                        <label for=\"login\">Login or email:</label><Field validate={[required]} component={LoginInputFormControl} name={'login'} type=\"text\"/>\n                    </li>\n                    <li className={styles.form_row}>\n                        <label for=\"password\">Password:</label><Field validate={[required]} component={LoginInputFormControl} name={'password'} type=\"password\"/>\n                    </li>\n                    <li className={styles.form_row}>\n                        {props.logFormInProcess ? <CircularProgress className={styles.process}/> : \n                            <button>Sign In <img className={styles.signin} width='25px' src={signin_icon} alt=\"\"/></button>\n                        }\n                    </li>\n                    <li className={styles.footer_form_row}>\n                        <a href=\"\">Forgot password?</a><span>Need an account? <NavLink to=\"/signup\">Sign up</NavLink></span>\n                    </li>\n                </ul>\n            </form>\n        </Fade>\n    </div>\n    );\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm);\n\nconst Login = (props) => {\n\n    let state = {\n        visible: true,\n    }\n\n    const onSubmit = (formData) => {\n        props.userLogin(formData);\n    }\n    const autoClose = () => {\n        props.resetAuthError()\n    }\n    if(props.isAuth){\n        return <Redirect to={\"/profile\"}/>\n    }\n    \n    return (\n        <div>\n            { props.authError ? \n            <Snackbar\n                open={state.visible}\n                onClose={autoClose}\n                autoHideDuration={6000}\n                anchorOrigin={{ horizontal: 'top', vertical: 'center' }}>\n                    <Alert severity=\"error\">\n                        {props.authError}\n                    </Alert>\n            </Snackbar> : null }\n            {\n              props.authStage === 1 ? \n              <div><LoginReduxForm onSubmit={onSubmit} logFormInProcess={props.logFormInProcess}/></div>\n               : null ||\n              props.authStage === 2 ? \n                <TwoFactorValidation store={props.store}/> : null ||\n              props.authStage === 3 ? \n                <TwoFactorVerify store={props.store} qrCode={props.qrCode}/> : null\n            }\n        </div>\n    );\n}\n\n\nexport default Login;","import React from 'react';\nimport Login from \"./Login\"\nimport { userLogin, resetAuthError } from \"../../redux/auth-reducer\"\nimport connect from \"react-redux/lib/connect/connect\";\n\n\nclass LoginContainer extends React.Component {\n    userLogin = (data) => {\n        this.props.userLogin(data)\n    }\n    resetAuthError = () => {\n        this.props.resetAuthError();\n    }\n    render(){\n        return (\n            <Login \n                {...this.props}\n                resetAuthError={this.resetAuthError} \n                logFormInProcess={this.props.logFormInProcess} \n                isAuth={this.props.isAuth} \n                userLogin={this.userLogin}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authStage: state.auth.authStage,\n        isAuth: state.auth.isAuth,\n        authError: state.auth.authError,\n        logFormInProcess: state.auth.logFormInProcess,\n        qrCode: state.auth.qrCode\n    }\n}\n\nexport default connect(mapStateToProps, {userLogin, resetAuthError})(LoginContainer)\n\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Field, reduxForm } from 'redux-form'\nimport TextField from '@material-ui/core/TextField'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport styles from \"./Register.module.css\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { validate, asyncValidate } from '../../validators/RegisterFormValidator'\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport moment from 'moment'\nimport { Fade } from \"react-awesome-reveal\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport TwoFactorVerify from '../TwoFactorAuth/TwoFactorVerify'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst RenderTextField = ({label, input, meta: { touched, invalid, error }, ...custom}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n)\n\nconst RenderPasswordField = ({label, input, meta: {touched, invalid, error}, ...custom }) => (\n    <TextField\n        id=\"standard-password-input\"\n        label={label}\n        type=\"password\"\n        autoComplete=\"off\"\n        error={touched && invalid}\n        helperText={touched && error}\n        {...input}\n        {...custom}\n      />\n);\n  \n\nconst RenderRadioButton = ({ input, ...rest },) => (\n  <FormControl>\n          <FormLabel component=\"legend\">Gender</FormLabel>\n    <RadioGroup {...input} {...rest}>\n      <FormControlLabel value=\"1\" control={<Radio required={true} color=\"primary\" />} label=\"Male\" />\n      <FormControlLabel value=\"2\" control={<Radio color=\"primary\" />} label=\"Female\" />\n    </RadioGroup>\n  </FormControl>\n)\n\nconst RenderDatePicker = ({ input: { onChange, value }, meta: {touched, invalid, error} }) => {\n  let date = new Date();\n  let dateFormat = moment(date).format('YYYY-MM-DD');\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <DatePicker\n        onChange={onChange}\n        error={touched && invalid}\n        helperText={touched && error}\n        disableFuture\n        openTo=\"year\"\n        format=\"dd-MM-yyyy\"\n        value={!value ? dateFormat : new Date(value)}\n        label='Date of birth'\n        views={[\"year\", \"month\", \"date\"]}/>\n    </MuiPickersUtilsProvider>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  inline_field: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n\n  },\n}));\n\nconst RegisterForm = (props) => {\n  const classes = useStyles();\n  const { handleSubmit, pristine, reset, submitting} = props\n  return (\n      <div className={styles.page}>\n        <Fade direction='right'>\n      <form className={styles.wrapper} onSubmit = { handleSubmit }>\n        <div className={styles.form}>\n        <div className={styles.logo}>\n          <img src=\"https://static.chilltime.com/v1/interface/media/chilltime/chilltime_logo_1200x750_default.png\" alt=\"\"/>\n        </div>\n          <h5>Sign Up</h5>\n        <div className={classes.inline_field}>\n          <Field name=\"firstname\" component={RenderTextField} label=\"First Name\"/>\n          <Field name=\"lastname\" component={RenderTextField} label=\"Last Name\" />\n        \n          <Field name=\"email\" component={RenderTextField} label=\"Email\" />\n          <Field name=\"login\" component={RenderTextField} label=\"Login\" />\n        </div>\n        <br/>\n        <div className={styles.middle}>\n          <Field name=\"gender\" component={RenderRadioButton}>\n            <Radio value=\"1\" label=\"male\" />\n            <Radio value=\"2\" label=\"female\" />\n          </Field>\n        <br/><br/>\n        <div>\n          <Field name='birthday' component={RenderDatePicker} label='Birthday'/>\n        </div>\n        </div>\n        <div/>\n        <br/>\n        <div className={classes.inline_field}>\n          <Field name='password' component={RenderPasswordField} label='Password'/>\n          <Field name='repeat_password' component={RenderPasswordField} label='Repeat password' />\n        </div>\n        <div className={styles.signup_btn}>\n          {props.regFormInProcess ? <CircularProgress /> : \n          <Button disabled={pristine || submitting} type='submit' variant=\"contained\" size=\"large\" color=\"primary\" >\n          Sign UP\n          </Button>\n          }\n          \n        </div>\n      </div>\n    </form></Fade>\n  </div>\n\n  )\n}\n\nconst ReduxRegisterForm = reduxForm({\n    form: \"signup\",\n    validate,\n    asyncValidate\n})(RegisterForm);\n\nclass Register extends React.Component {\n  componentDidMount() {\n    if(this.props.isAuth){\n      return <Redirect to={\"/profile\"}/>\n    }\n  }\n  state = {\n      visible: true,\n  }\n  autoClose = () => {\n      this.props.resetRegError()\n  }\n  generateForm = (formData) => {\n    let format_birthday = moment(formData.birthday).format('YYYY-MM-DD');\n\n    const getUserAge = (birthday) => {\n      let userBirthdayDate = new Date(birthday);\n      let ageDifMs = Date.now() - userBirthdayDate.getTime();\n      let ageDate = new Date(ageDifMs);\n      return Math.abs(ageDate.getUTCFullYear() - 1970);\n    }\n    let finalForm = {\n      firstname: formData.firstname,\n      lastname: formData.lastname,\n      fullname: formData.firstname + \" \" + formData.lastname,\n      email: formData.email,\n      login: formData.login.toLowerCase(),\n      gender: formData.gender,\n      birthday: format_birthday,\n      age: getUserAge(format_birthday),\n      password: formData.password\n    }\n      return finalForm;\n  }\n  signUp = (formData) => {\n    this.props.userRegister(this.generateForm(formData));\n  }\n  render() {\n    return (\n      <div>\n          { this.props.regError ? \n            <Snackbar\n                open={this.state.visible}\n                onClose={this.autoClose}\n                autoHideDuration={6000}\n                anchorOrigin={{ horizontal: 'top', vertical: 'center' } }>\n                    <Alert severity=\"error\">\n                        {this.props.regError}\n                    </Alert>\n            </Snackbar> : null }\n            {\n              this.props.authStage === 3 ? \n                <TwoFactorVerify store={this.props.store} qrCode={this.props.qrCode} /> : \n                <div><ReduxRegisterForm \n                        onSubmit={this.signUp} \n                        regFormInProcess={this.props.regFormInProcess}/></div>\n\n            }\n      </div>\n    );\n  }\n}\n\nexport default Register;","export const validate = values => {\n    const errors = {}\n    const requiredFields = [\n      'firstname',\n      'lastname',\n      'email',\n      'login',\n      'gender',\n      'birthday',\n      'password',\n      'repeat_password'\n    ]\n    requiredFields.forEach(field => {\n      if (!values[field]) {\n        errors[field] = 'Required'\n      }\n    })\n    if(values.firstname && (values.firstname.length < 2 || values.firstname.length > 12)) {\n      errors.firstname = 'The first name cannot be less than 3 or more than 12 characters'\n    }\n\n    if(values.firstname && !/^[a-z]+$/i.test(values.firstname)){\n      errors.firstname = 'The first name cannot contain numbers and forbidden characters'\n    }\n    if(values.lastname && !/^[a-z]+$/i.test(values.lastname)){\n      errors.lastname = 'The last name cannot contain numbers and forbidden characters'\n    }\n    if(values.lastname && (values.lastname.length < 2 || values.lastname.length > 12)) {\n      errors.lastname = 'The last name cannot be less than 3 or more than 12 characters'\n    }\n    if(values.login && (values.login.length < 2 || values.login.length > 20)) {\n      errors.login = 'The login name cannot be less than 3 or more than 20 characters'\n    }\n    if(values.login && !/^[a-zA-z]{1}[a-zA-Z1-9]{3,20}$/.test(values.login)){\n      errors.login = 'Prohibited characters used in the login'\n    }\n    if(values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address'\n    }\n    if(values.password && values.password.length < 8){\n      errors.password = \"Password length cannot be less than 8 characters\"\n    }\n    if(values.password && !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/.test(values.password)) {\n      errors.password = \"This password is not strong. Please use special characters, numbers, upper and lower case characters\"\n    }\n    if(values.repeat_password && values.repeat_password !== values.password) {\n      errors.repeat_password = \"Password mismatch\"\n    }\n    return errors\n  }\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const asyncValidate = (values /*, dispatch */) => {\n  return sleep(1000).then(() => {\n    // simulate server latency\n    if (['foo@foo.com', 'bar@bar.com'].includes(values.email)) {\n      // eslint-disable-next-line no-throw-literal\n      throw { email: 'Email already Exists' }\n    }\n  })\n}\n","import React from 'react';\nimport Register from \"./Register\"\nimport { userRegister, resetRegError } from '../../redux/auth-reducer'\nimport connect from \"react-redux/lib/connect/connect\";\nimport { compose } from 'redux';\nimport withRouter from \"react-router-dom/withRouter\"\nimport { Redirect } from 'react-router-dom'\n\n\nclass RegisterContainer extends React.Component{\n    userRegister = (data) => {\n        this.props.userRegister(data);\n    }\n    resetRegError = () => {\n        this.props.resetRegError();\n    }\n    render() {\n        if(this.props.isAuth === true) {\n            return <Redirect to={'/profile'}/>\n        }\n        return (\n            <Register \n                {...this.props} \n                regFormInProcess={this.props.regFormInProcess} \n                userRegister={this.userRegister}\n                resetRegError={this.resetRegError}\n                />\n        );\n    }\n}\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        qrCode: state.auth.qrCode,\n        authStage: state.auth.authStage,\n        regError: state.auth.regError,\n        regFormInProcess: state.auth.regFormInProcess,\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, { userRegister, resetRegError }),\n    withRouter\n)(RegisterContainer)\n","import React from 'react'\nimport styles from './Message.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst Message = (props) => {\n    return(\n        <div className={styles.wrapper}>\n            { props.author == props.authData.id ?\n            <div>\n                <NavLink to={ '/profile/' + props.authData.id }><img className={styles.userPhoto} src={props.authorData.profile_image} alt=\"\"/></NavLink>\n                <div className={styles.my_message}>\n                <span>{props.content}</span></div> \n            </div>\n            \n            :\n            <div className={styles.msg_wrapper}>\n                <div className={styles.other_message}>\n                <span>{props.content}</span></div> \n                <NavLink to={ '/profile/' + props.author }><img className={styles.userPhoto} src={props.authorData.profile_image} alt=\"\"/></NavLink>\n            </div> \n        }\n        </div>\n    );\n}\n\nexport default Message;","import React, { useState, useEffect, useRef } from 'react';\nimport styles from './Messages.module.css'\nimport Message from './Message/Message'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {Form, InputGroup, FormControl} from \"react-bootstrap\";\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport SentimentSatisfiedSharpIcon from '@material-ui/icons/SentimentSatisfiedSharp';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nconst ChatMessageForm = (props) => {\n    return (\n        <Form onSubmit={props.submitChatMessage}>\n            <div className={styles.inputBlock}>\n                <InputGroup>\n                    <FormControl\n                    aria-label=\"Default\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                    placeholder=\"Enter message\"\n                    value={props.chatMessage}\n                    onChange={props.handleSearchChange}\n                    maxLength='1000'\n                    required\n                    />\n                </InputGroup>\n                <Button\n                    className={styles.sendBtn}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type='submit'\n                    endIcon={<SendIcon/>}>\n                    Send\n                </Button>\n                </div>\n                <div className={styles.iconsTab}>\n                    <SentimentSatisfiedSharpIcon onClick={props.toggleEmojiPicker} className={styles.emojiIcon} color=\"primary\"/>\n                    <AttachFileIcon className={styles.attachIcon} color='primary'/>\n                </div>\n                { props.emojiPicker ?\n                    <div className={styles.emojiPicker}><Picker autoFocus tabIndex={0}  set='apple' onSelect={props.addEmoji} /></div>\n                    : null\n                    }\n        </Form>\n    )\n}\nconst Messages = (props) => {\n    let messagesElements = props.messagesData.map(m => <Message \n        key={m.id}\n        author={m.author}\n        authData={props.authData}\n        authorData={m.authorData} \n        content={m.content}\n        dialogId={m.dialogId}\n        createdAt={m.createdAt}/>)\n    return(\n        <div className={styles.wrapper}>\n            <div>\n                <div>\n                    {props.messagesIsFetching ? <div class={styles.fetchProgress}><CircularProgress/></div>\n                    : <div className={styles.messageItems}>\n                        \n                        <div id='scrollableComponent' style={{\n                                height: 300,\n                                display: 'flex',\n                                overflow:'auto',\n                                flexDirection: 'column-reverse',}}>\n                            <InfiniteScroll\n                                    dataLength={messagesElements.length}\n                                    style={{ display: 'flex', flexDirection: 'column-reverse', overflow:'auto' }}\n                                    scrollableTarget='scrollableComponent'\n                                    next={props.fetchMoreMessages}\n                                    hasMore={ messagesElements.length > 0 ? props.hasMore : false }\n                                    inverse={true}\n                                    endMessage={\n                                        <p style={{ textAlign: 'center' }}>\n                                            { messagesElements.length === 0 ? <label className={styles.msgHistoryText}>Messages history is empty...</label>\n                                            :\n                                            <b>START MESSAGING</b>\n                                            }\n                                        </p>\n                                      }\n                                    loader={<div className={styles.fetchMoreMessagesProgress}><CircularProgress /></div>}>\n                                        \n                                { messagesElements }\n                            </InfiniteScroll>\n                        </div>\n                            \n                            { props.displayDownButton ?\n                            <KeyboardArrowDownIcon  className={styles.scrolldownBtn}/> : null }\n                        </div> }\n                    <ChatMessageForm {...props} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Messages;\n\n","import React from 'react';\nimport Messages from './Messages'\nimport { withAuthRedirect } from '../../../hoc/AuthRedirect';\nimport { compose } from 'redux';\nimport connect from \"react-redux/lib/connect/connect\";\nimport { getDialogMessages, resetDialogMessages, sendMessageActionCreator, fetchMoreMessages} from '../../../redux/dialogs-reducer';\nimport withRouter from \"react-router-dom/withRouter\"\nimport io from 'socket.io-client';\n\n\nclass MessagesContainer extends React.Component {\n    state = {\n        chatMessage: \"\",\n        emojiPicker: false,\n        displayDownButton: false,\n        pagination: 1,\n        hasMore: true,\n        scrollPosition: 0,\n        receiveId: this.props.match.params.receiveId\n    }\n    handleSearchChange = (e) => {\n        this.setState({\n            chatMessage: e.target.value\n        })\n    }\n    submitChatMessage = (e) => {\n        e.preventDefault();\n\n        let chatMessage = this.state.chatMessage;\n        let authorId = this.props.authData.id;\n        let dialog = this.props.currentDialogData;\n        let receiveId = this.state.receiveId\n        let status = '0';\n        if(dialog === null) {\n            this.socket.emit('input-create-new-dialog', {\n                authorId,\n                receiveId,\n                status\n            })\n            \n        } else {\n            let dialogId = this.props.currentDialogData.dialogId\n            this.socket.emit('input-chat-message', {\n                authorId,\n                dialogId,\n                chatMessage\n            });\n            this.setState({ chatMessage: \"\", emojiPicker: false });\n        }\n        \n    }\n    toggleEmojiPicker = () => {\n        if(this.state.emojiPicker){\n            this.setState({\n                emojiPicker: false\n            })\n        } else {\n            this.setState({\n                emojiPicker: true\n            })\n        }\n    }\n    addEmoji = (emoji) => {\n        this.setState({ chatMessage: this.state.chatMessage+emoji.native });\n    }\n    fetchMoreMessages = () => {\n        if(this.props.messagesData.length >= this.props.messagesCount) {\n            this.setState({ hasMore: false });\n            return;\n        }\n        setTimeout(() => {\n            this.setState({\n                pagination: this.state.pagination+=1\n            })\n            this.props.fetchMoreMessages(this.state.receiveId, this.state.pagination);\n        }, 1000)\n    }\n    componentDidMount() {\n        \n        let server = 'https://chilltime-app.herokuapp.com';\n        \n        this.socket = io(server);\n\n        this.socket.on('output-chat-message', msg => {\n            this.props.sendMessageActionCreator(msg)\n        })\n        this.socket.on('output-create-new-dialog', data => {\n            this.props.getDialogMessages(data.receiveId, this.props.pagination)\n            let dialogId = data.id;\n            let authorId = data.sendId;\n            let chatMessage = this.state.chatMessage;\n\n            this.socket.emit('input-chat-message', {\n                authorId,\n                dialogId,\n                chatMessage\n            })\n            this.setState({ chatMessage: \"\", emojiPicker: false });\n        })\n        let receiveId = this.state.receiveId\n        this.props.getDialogMessages(receiveId, this.props.pagination);\n    }\n\n    componentWillUnmount() {\n        this.socket.close()\n        this.props.resetDialogMessages();\n    }\n    render() {\n        return(\n            <Messages \n                {...this.props} \n                chatMessage={this.state.chatMessage}\n                emojiPicker={this.state.emojiPicker}\n                displayDownButton={this.state.displayDownButton}\n                totalMessages={this.props.dialogsPage.messagesCount}\n                fetchMoreMessages={this.fetchMoreMessages}\n                addEmoji={this.addEmoji}\n                hasMore={this.state.hasMore}\n                handleSearchChange={this.handleSearchChange}\n                submitChatMessage={this.submitChatMessage}\n                toggleEmojiPicker={this.toggleEmojiPicker}\n                />\n        )\n    }\n}\nlet mapStateToProps = (state) => {\n    return {\n        authData: state.auth,\n        dialogsPage: state.dialogsPage,\n        messagesData: state.dialogsPage.messagesData,\n        pagination: state.dialogsPage.messagesPagination,\n        currentDialogData: state.dialogsPage.currentDialogData,\n        messagesCount: state.dialogsPage.messagesCount,\n        messagesIsFetching: state.dialogsPage.messagesIsFetching\n    }\n    \n}\n\nexport default compose(\n    withAuthRedirect,\n    withRouter,\n    connect(mapStateToProps, { getDialogMessages, resetDialogMessages, sendMessageActionCreator, fetchMoreMessages})\n)(MessagesContainer);\n","import React from 'react';\nimport connect from \"react-redux/lib/connect/connect\";\nimport { compose } from 'redux';\nimport { initialize } from '../src/redux/auth-reducer'\nimport withRouter from \"react-router-dom/withRouter\"\nimport './App.css';\nimport Navigate from './components/Navigate/Navigate'\nimport News from './components/News/News'\nimport FriendsContainer from './components/Friends/FriendsContainer'\nimport SettingsContainer from './components/Settings/SettingsContainer'\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport store from './redux/redux-store'\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginContainer from './components/Login/LoginContainer';\nimport RegisterContainer from './components/Register/RegisterContainer';\nimport MessagesContainer from './components/Dialogs/Messages/MessagesContainer';\nimport { CircularProgress } from '@material-ui/core';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initialize();\n  }\n  render() {\n    if(this.props.initialized) {\n      return(\n        <Switch>\n        <Route exact path='/login' component={LoginPage}/>\n        <Route exact path='/signup' component={RegisterPage}/>\n          <div className=\"App\">\n            <Route component={DefaultContainer}/>\n          </div>\n        </Switch>\n        )\n      }\n    else {\n      return(\n        <div className='loader'>\n          <CircularProgress size={100}/>\n        </div>\n      )\n    }\n  }\n}\n\n\nconst LoginPage = () => {\n  return(\n    <div>\n      <Route exact path='/' render={ () => <Redirect to=\"/login\"/> } />\n      <Route path=\"/login\" render={ () => <LoginContainer store={store}/>}/>\n    </div>\n  )\n}\n\nconst RegisterPage = () => {\n  return(\n    <div>\n      <Route exact path='/' render={ () => <Redirect to=\"/signup\"/> } />\n      <Route path=\"/signup\" render={ () => <RegisterContainer store={store}/>}/>\n    </div>\n  )\n}\n\nconst DefaultContainer = () => {\n  return(\n    <div>\n    <div className = 'app-wrapper'>\n        <HeaderContainer store={store}/>\n        <Navigate />\n      <div className='app-wrapper-content'>\n        <Route exact path='/' render={() => <Redirect to={\"/profile\"}/>}/>\n          <Route exec path='/profile/:userId?' render={ () =>\n              <ProfileContainer store={store}/> } />\n          <Route exact path='/dialogs' render={ () =>\n              <DialogsContainer store={store}/> } />\n          <Route exact path='/dialogs/:receiveId' render={ () =>\n              <MessagesContainer store={store}/> } />\n          <Route path='/news' render={ () => <News /> } />\n          <Route exact path='/friends/:userId?' render={ () => \n              <FriendsContainer store={store}/> } />\n          <Route path='/settings' render={ () => <SettingsContainer store={store} /> } />\n          <Route path='/users' render={ () => <UsersContainer store={store}/> } />\n      </div>\n    </div>\n  </div>\n  )\n  \n}\n\nlet mapStateToProps = (state) => {\n    return {\n      authData: state.auth,\n      initialized: state.auth.initialized\n    }\n}\n\nexport default compose(\n  connect(mapStateToProps, { initialize }),\n  withRouter\n)(App)\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport { HashRouter } from 'react-router-dom'\n\nclass Title extends React.Component {\n    render() {\n        document.title = 'Chilltime - social network'\n        return null;\n    }\n}\nReactDOM.render(\n    <HashRouter>\n    <Provider store={store}>\n        <App store={store}/>\n        <Title />\n    </Provider>\n    </HashRouter>, document.getElementById('root')\n);\n\n\n\n\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabContentWrap\":\"Dialogs_tabContentWrap__z4__5\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"contactsItems\":\"Dialogs_contactsItems__3NAkj\",\"selectTab\":\"Dialogs_selectTab__FSp8O\",\"active\":\"Dialogs_active__2sQhs\",\"dialogs_text\":\"Dialogs_dialogs_text__cbBBM\",\"column_type\":\"Dialogs_column_type__KofIk\",\"progress\":\"Dialogs_progress__WqXrh\",\"emptyListBlock\":\"Dialogs_emptyListBlock__1i9LT\",\"fetchMoreProgress\":\"Dialogs_fetchMoreProgress__1KbkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_block\":\"Users_search_block__TyVlo\",\"profile_wrapper\":\"Users_profile_wrapper__2UVxR\",\"loader\":\"Users_loader__1j95W\",\"filter_icon\":\"Users_filter_icon__1uCNC\",\"search_form\":\"Users_search_form__16uwH\",\"search_btn\":\"Users_search_btn__3Vi8J\",\"showMoreBtn\":\"Users_showMoreBtn__fCsY_\",\"not_found\":\"Users_not_found__1q8xX\",\"selectedPage\":\"Users_selectedPage__J63sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2EmvQ\",\"user_name\":\"Post_user_name__1ec75\",\"post_content\":\"Post_post_content__2HR9W\",\"like_icon\":\"Post_like_icon__25wzL\",\"comment_icon\":\"Post_comment_icon__30cMR\",\"share_icon\":\"Post_share_icon__3l3la\",\"posted_info\":\"Post_posted_info__1eeAT\",\"post_option\":\"Post_post_option__1PxLZ\",\"postMenuIcon\":\"Post_postMenuIcon__31KHY\",\"updatePostBtn\":\"Post_updatePostBtn__1nfLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Messages_wrapper__39QK3\",\"inputBlock\":\"Messages_inputBlock__1LA4G\",\"fetchProgress\":\"Messages_fetchProgress__XZBxg\",\"fetchMoreMessagesProgress\":\"Messages_fetchMoreMessagesProgress__1p8Bc\",\"messageItems\":\"Messages_messageItems__3YjPK\",\"sendBtn\":\"Messages_sendBtn__1FO72\",\"scrolldownBtn\":\"Messages_scrolldownBtn__3ranS\",\"iconsTab\":\"Messages_iconsTab__2RaGQ\",\"emojiPicker\":\"Messages_emojiPicker__2FMv8\",\"emojiIcon\":\"Messages_emojiIcon__2d5aj\",\"attachIcon\":\"Messages_attachIcon__ZaOpL\",\"msgHistoryText\":\"Messages_msgHistoryText__2F_pL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"User_wrapper__1v4-a\",\"profile_image\":\"User_profile_image__2l1bT\",\"profile_block\":\"User_profile_block__3kujB\",\"profile_name\":\"User_profile_name__8mlbw\",\"vl\":\"User_vl__3WlkU\",\"add_btn\":\"User_add_btn__1WBi-\",\"undo_btn\":\"User_undo_btn__3sPdN\",\"status\":\"User_status__29Xzb\",\"friend_status\":\"User_friend_status__9Vkgq\",\"inventation_status\":\"User_inventation_status__1XgPk\",\"friend_icon\":\"User_friend_icon__26pgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentBlock\":\"Friends_contentBlock__19oVL\",\"fetchMoreProgress\":\"Friends_fetchMoreProgress__2w8f8\",\"fetchProgress\":\"Friends_fetchProgress__2aNOh\",\"emptyListBlock\":\"Friends_emptyListBlock__1Wi8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Invitation_wrapper__1sP2_\",\"profile_image\":\"Invitation_profile_image__2T_vr\",\"profile_block\":\"Invitation_profile_block__2KsQI\",\"profile_name\":\"Invitation_profile_name__1HtZJ\",\"acceptBtn\":\"Invitation_acceptBtn__2zWCD\",\"rejectBtn\":\"Invitation_rejectBtn__2125V\",\"acceptIcon\":\"Invitation_acceptIcon__1hJ28\",\"rejectIcon\":\"Invitation_rejectIcon__1VnSr\",\"actions\":\"Invitation_actions__1iuII\",\"name\":\"Invitation_name__fSPDL\",\"acceptMsg\":\"Invitation_acceptMsg__1-yZW\",\"rejectMsg\":\"Invitation_rejectMsg__CB9W9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_user_image\":\"ProfileHub_friend_user_image__7mK2s\",\"friendName\":\"ProfileHub_friendName__13Mhn\",\"user_friends\":\"ProfileHub_user_friends__2zRmC\",\"comingBlock\":\"ProfileHub_comingBlock__O471_\",\"emptyBlock\":\"ProfileHub_emptyBlock__2Gh_c\",\"showAll\":\"ProfileHub_showAll__3M3qC\",\"hubTitle\":\"ProfileHub_hubTitle__3ucyf\",\"hubIcon\":\"ProfileHub_hubIcon__vLqiN\",\"cardElement\":\"ProfileHub_cardElement__2o1K_\",\"settingIcon\":\"ProfileHub_settingIcon__1DCEx\",\"sadIcon\":\"ProfileHub_sadIcon__a282h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Login_page__X0ryR\",\"wrapper\":\"Login_wrapper__1IflB\",\"form_row\":\"Login_form_row__1Wb2U\",\"footer_form_row\":\"Login_footer_form_row__nkxgS\",\"signin\":\"Login_signin__3KiBP\",\"process\":\"Login_process__2TbHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"TwoFactorVerify_page__3ENMn\",\"wrapper\":\"TwoFactorVerify_wrapper__27NKx\",\"form_row\":\"TwoFactorVerify_form_row__2ki2t\",\"codeRow\":\"TwoFactorVerify_codeRow__bhWlt\",\"phone_icon\":\"TwoFactorVerify_phone_icon__1uA_g\",\"submitBtn\":\"TwoFactorVerify_submitBtn__T_Ig4\",\"content\":\"TwoFactorVerify_content__-ylsZ\",\"login_progress\":\"TwoFactorVerify_login_progress__3o9ws\"};"],"sourceRoot":""}